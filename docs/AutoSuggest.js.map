{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["const Utilities = {\r\n    noop: () => {},\r\n    noopd: data => data,\r\n\r\n    ensure: (context, object, keys) => {\r\n        [].concat(keys).forEach(key => {\r\n            if (typeof object[key] === 'undefined') {\r\n                throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n            }\r\n        });\r\n    },\r\n    ensureType: (context, object, key, type) => {\r\n        [].concat(object[key]).forEach(value => {\r\n            if (typeof value !== type) {\r\n                throw new Error(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n            }\r\n        });\r\n    },\r\n\r\n    cloneStyle: (element1, element2) => {\r\n        const style1 = window.getComputedStyle($(element1)[0], null);\r\n        const style2 = {};\r\n\r\n        Array.prototype.forEach.call(style1, property => {\r\n            style2[property] = style1.getPropertyValue(property);\r\n        });\r\n        $(element2).css(style2);\r\n    },\r\n    getGlobalOffset: element => {\r\n        let obj = element;\r\n        let left = 0;\r\n        let top = 0;\r\n        do {\r\n            left += obj.offsetLeft;\r\n            top += obj.offsetTop;\r\n        } while (obj = obj.offsetParent);\r\n        return {left, top};\r\n    },\r\n    getScrollLeftForInput: element => {\r\n        if(element.createTextRange) {\r\n            const range = element.createTextRange();\r\n            const inputStyle = window.getComputedStyle(element, undefined);\r\n            const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n            const rangeRect = range.getBoundingClientRect();\r\n            return element.getBoundingClientRect().left + element.clientLeft + paddingLeft - rangeRect.left;\r\n        } else {\r\n            return $(element).scrollLeft();\r\n        }\r\n    },\r\n    getCursorPosition: input => {\r\n        let position = 0;\r\n    \r\n        if (typeof input.selectionDirection !== 'undefined') {\r\n            position = input.selectionDirection=='backward' ? input.selectionStart : input.selectionEnd;\r\n        } else if (document.selection) {\r\n            input.focus();\r\n            const selection = document.selection.createRange();\r\n            selection.moveStart('character', -input.value.length);\r\n            position = selection.text.length;\r\n        }\r\n    \r\n        return position;\r\n    },\r\n\r\n    htmlEncode: value => $('<div/>').text(value).html()\r\n};\r\n\r\nexport default Utilities;\r\n","import jQuery from 'jquery';\r\nimport Utilities from './Utilities';\r\n\r\nconst $ = jQuery;\r\nconst defaultOptions = {\r\n    trigger: null,\r\n    caseSensitive: true\r\n};\r\n\r\nfunction validateSuggestions (suggestions, ignoreOn) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                show: suggestion,\r\n                replaceWith: suggestion,\r\n                cursorPosition: [0, 0]\r\n            };\r\n\r\n            if (!ignoreOn) {\r\n                suggestion.on = [suggestion.show];\r\n            }\r\n        } else if (type === 'object') {\r\n            Utilities.ensure('Suggestion', suggestion, ['show', 'replaceWith']);\r\n            Utilities.ensureType('Suggestion', suggestion, 'show', 'string');\r\n            Utilities.ensureType('Suggestion', suggestion, 'replaceWith', 'string');\r\n            suggestion.cursorPosition = suggestion.cursorPosition || [0, 0];\r\n            if (suggestion.cursorPosition.constructor !== Array) {\r\n                suggestion.cursorPosition = [suggestion.cursorPosition, suggestion.cursorPosition];\r\n            }\r\n\r\n            if (!ignoreOn) {\r\n                Utilities.ensure('Suggestion', suggestion, 'on');\r\n                Utilities.ensureType('Suggestion', suggestion, 'on', 'string');\r\n                suggestion.on = [].concat(suggestion.on);\r\n            }\r\n        }\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.suggestions) {\r\n        options = {\r\n            suggestions: options\r\n        };\r\n    }\r\n\r\n    options = $.extend(true, {}, defaultOptions, options || {});\r\n    Utilities.ensure('SuggestionList', options, 'suggestions');\r\n\r\n    if (typeof options.suggestions === 'function') {\r\n        this.getSuggestions = (keyword, callback) => {\r\n            options.suggestions(keyword, suggestions => callback(validateSuggestions(suggestions, true)));\r\n        };\r\n    } else if (options.suggestions.constructor === Array || typeof options.suggestions === 'string') {\r\n        options.suggestions = validateSuggestions(options.suggestions);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const match = new RegExp(keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.suggestions.filter(suggestion => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < suggestion.on.length; i++) {\r\n                        if (matchFound = match.test(suggestion.on[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    const trigger = options.trigger;\r\n    if (trigger && typeof trigger !== 'string') {\r\n        throw new Error('AutoSuggest: Invalid Type, SuggestionList.trigger should be a string');\r\n    }\r\n\r\n    if (trigger) {\r\n        const escapedTrigger = `\\\\${trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n    \r\n    this.trigger = trigger;\r\n}\r\n\r\nexport default SuggestionList;\r\n","import jQuery from 'jquery';\r\nconst $ = jQuery;\r\n\r\nclass SuggestionDropdown {\r\n    constructor(options) {\r\n        this.width = 0;\r\n        this.hidden = true;\r\n\r\n        this.dropdownContent = $('<ul class=\"dropdown-menu dropdown-menu-left\"></ul>');\r\n        this.dropdown = $('<div class=\"dropdown open as-dropdown\" style=\"display:none; position: absolute;\"></div>');\r\n        $('body').append(this.dropdown.append(this.dropdownContent));\r\n        this.hide();\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown[0].style.left = `${position.left}px`;\r\n            this.dropdown[0].style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > $('body').width()) {\r\n                this.dropdown.find('.dropdown-menu').removeClass('dropdown-menu-left').addClass('dropdown-menu-right');\r\n            } else {\r\n                this.dropdown.find('.dropdown-menu').removeClass('dropdown-menu-right').addClass('dropdown-menu-left');\r\n            }\r\n        }\r\n        this.dropdown.find('li').removeClass('active');\r\n        this.dropdown.find('li:first-child').addClass('active');\r\n        this.dropdown.show();\r\n        this.hidden = false;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.hide();\r\n        this.hidden = true;\r\n    }\r\n\r\n    setWidth() {\r\n        this.width = this.dropdownContent.width();\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        const self = this;\r\n        this.dropdownContent.empty();\r\n\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLink = $(`<li><a>${suggestion.show}</a></li>`);\r\n            dropdownLink.data('as-linkcontent', suggestion);\r\n            dropdownLink.mousedown(() => {\r\n                onSet(suggestion);\r\n                self.hide();\r\n                return false;\r\n            });\r\n\r\n            self.dropdownContent.append(dropdownLink);\r\n        });\r\n\r\n        if (this.hidden) {\r\n            this.show();\r\n            this.setWidth();\r\n            this.hide();\r\n        } else {\r\n            this.setWidth();\r\n        }\r\n    }\r\n\r\n    getValue() {\r\n        return this.dropdown.find('li.active').data('as-linkcontent');\r\n    }\r\n\r\n    next() {\r\n        const activeLink = this.dropdown.find('li.active');\r\n        const nextLink = activeLink.next();\r\n\r\n        activeLink.removeClass('active');\r\n        if(nextLink.length) {\r\n            nextLink.addClass('active');\r\n        } else {\r\n            this.dropdown.find('li:first-child').addClass('active');\r\n        }\r\n\r\n        return this.getValue();\r\n    }\r\n\r\n    prev() {\r\n        const activeLink = this.dropdown.find('li.active');\r\n        const prevLink = activeLink.prev();\r\n\r\n        activeLink.removeClass('active');\r\n        if(prevLink.length) {\r\n            prevLink.addClass('active');\r\n        } else {\r\n            this.dropdown.find('li:last-child').addClass('active');\r\n        }\r\n\r\n        return this.getValue();\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import jQuery from 'jquery';\r\nconst $ = jQuery;\r\n\r\nimport Utilities from './Utilities';\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction extendFromGlobalOptions(currentOptions, globalOptions, optionList) {\r\n    optionList.forEach(option => {\r\n        if (typeof globalOptions[option] !== 'undefined' && typeof currentOptions[option] === 'undefined') {\r\n            currentOptions[option] = globalOptions[option];\r\n        }\r\n    });\r\n}\r\n\r\nfunction getCaretPosition(element) {\r\n    if (element.data('as-isinput')) {\r\n        const originalValue = element.val();\r\n        const cursorPosition = Utilities.getCursorPosition(element[0]);\r\n        const value = originalValue.slice(0, cursorPosition);\r\n\r\n        //Create a clone of our input field using div and copy value into div\r\n        //Wrap last character in a span to get its position\r\n        $('.as-positionclone').remove();\r\n\r\n        const clone = $('<div class=\"as-positionclone\"/>');\r\n        const cloneContent = $(`<div style=\"display:inline-block;\">${Utilities.htmlEncode(value.slice(0, -1))}<span id=\"as-positioner\">${Utilities.htmlEncode(value.slice(-1))}</span>${Utilities.htmlEncode(originalValue.slice(cursorPosition))}</div>`);\r\n\r\n        clone.append(cloneContent);\r\n        Utilities.cloneStyle(element[0], clone[0]);\r\n\r\n        //Get position of element and overlap our clone on the element\r\n        const elementPosition = Utilities.getGlobalOffset(element[0]);\r\n        clone.css({\r\n            position: 'absolute',\r\n            opacity: 0,\r\n            left: `${elementPosition.left}px`,\r\n            top: `${elementPosition.top}px`,\r\n        });\r\n\r\n        //append clone and scroll\r\n        $('body').append(clone);\r\n\r\n        //Extra styles for the clone depending on type of input\r\n        if (element.is('input')) {\r\n            clone.css({ overflowX: 'auto', whiteSpace: 'nowrap' });\r\n            if (cursorPosition === originalValue.length) {\r\n                clone.scrollLeft(cloneContent.width());\r\n            } else {\r\n                clone.scrollLeft(Math.min(Utilities.getScrollLeftForInput(element[0]), cloneContent.width()));\r\n            }\r\n        } else {\r\n            cloneContent.css('max-width', '100%');\r\n            clone.scrollLeft(element.scrollLeft());\r\n            clone.scrollTop(element.scrollTop());\r\n        }\r\n\r\n        //Get position of span\r\n        const caretPosition = Utilities.getGlobalOffset($('#as-positioner')[0]);\r\n        caretPosition.left += 10 - clone.scrollLeft();\r\n        caretPosition.top += 28 - clone.scrollTop();\r\n        clone.remove();\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst defaultOptions = {\r\n    suggestions: [],\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, inputs) {\r\n        options = $.extend(true, {}, defaultOptions, options || {});\r\n\r\n        this.isActive = false;\r\n        this.activeElement = null;\r\n        this.activeElementCursorPosition = 0;\r\n        this.activeSuggestionList = null;\r\n\r\n        this.dropdown = new SuggestionDropdown();\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = [].concat(options.suggestions);\r\n\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let currentSuggestionList = this.suggestionLists[i];\r\n            if (!currentSuggestionList) {\r\n                throw new Error('AutoSuggest: invalid suggestion list passed');\r\n            }\r\n\r\n            if (!(currentSuggestionList instanceof SuggestionList)) {\r\n                if (!currentSuggestionList.suggestions) {\r\n                    currentSuggestionList = {\r\n                        suggestions: currentSuggestionList\r\n                    };\r\n                }\r\n\r\n                extendFromGlobalOptions(currentSuggestionList, options, ['caseSensitive', 'trigger']);\r\n                this.suggestionLists[i] = new SuggestionList(currentSuggestionList);\r\n            }\r\n        }\r\n\r\n        inputs && this.addInputs(inputs);\r\n    }\r\n\r\n    addInputs(inputs) {\r\n        inputs = $(inputs);\r\n        const self = this;\r\n\r\n        // validate element\r\n        inputs.each(function() {\r\n            const that = $(this);\r\n            if (this.isContentEditable) {\r\n                that.data('as-isinput', false);\r\n            } else if (that.is('input[type = text],textarea')) {\r\n                that.data('as-isinput', true);\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n        });\r\n\r\n        // init events\r\n        inputs.on('input', function() {\r\n            const that = $(this);\r\n            let value = that.val();\r\n\r\n            if (that.data('as-isinput')) {\r\n                const cursorPosition = Utilities.getCursorPosition(this);\r\n                self.activeElementCursorPosition = cursorPosition;\r\n                value = value.slice(0, cursorPosition);\r\n            }\r\n\r\n            self.isActive = false;\r\n\r\n            for (const currentSuggestionList of self.suggestionLists) {\r\n                if (currentSuggestionList.regex.test(value)) {\r\n                    self.activeSuggestionList = currentSuggestionList;\r\n                    const match = value.match(currentSuggestionList.regex)[1];\r\n                    currentSuggestionList.getSuggestions(match, results => {\r\n                        if (results.length) {\r\n                            self.isActive = true;\r\n                            self.dropdown.fill(results, suggestion => self.setValue(suggestion, currentSuggestionList));\r\n                            self.dropdown.show(getCaretPosition(that));\r\n                        } else {\r\n                            self.dropdown.hide();\r\n                        }\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!self.isActive) {\r\n                self.dropdown.hide();\r\n            }\r\n        });\r\n\r\n        inputs.keydown((event, originalEvent) => {\r\n            if (self.isActive) {\r\n                let newValue;\r\n                const e = originalEvent||event;\r\n                if (e.keyCode === 13 || e.keyCode === 9) {\r\n                    self.setValue(self.dropdown.getValue(), self.activeSuggestionList);\r\n                    self.dropdown.hide();\r\n                } else if (e.keyCode == 40) {\r\n                    newValue = self.dropdown.next();\r\n                } else if (e.keyCode == 38) {\r\n                    newValue = self.dropdown.prev();\r\n                } else {\r\n                    return true;\r\n                }\r\n                e.preventDefault();\r\n                event.stopImmediatePropagation();\r\n            }\r\n        });\r\n\r\n        inputs.blur(() => {\r\n            self.activeElement = null;\r\n            self.isActive = false;\r\n            self.dropdown.hide();\r\n        }).focus(function () {\r\n            self.activeElement = $(this);\r\n        });\r\n    }\r\n\r\n    setValue(suggestion, suggestionList) {\r\n        const self = this;\r\n        const element = this.activeElement;\r\n        const insertText = suggestion.replaceWith;\r\n\r\n        if (element) {\r\n            if (element.data('as-isinput')) {\r\n                const originalValue = element.val();\r\n                const cursorPosition = self.activeElementCursorPosition;\r\n                let value = originalValue.slice(0, cursorPosition);\r\n                const currentValue = value.split(suggestionList.trigger || /\\W/).pop();\r\n\r\n                value = value.slice(0, 0 - currentValue.length - (suggestionList.trigger || '').length);\r\n                const cursorStartPosition = value.length;\r\n\r\n                element.val(value + insertText + originalValue.slice(cursorPosition));\r\n                element.focus();\r\n\r\n                const newCursorPositions = suggestion.cursorPosition;\r\n                const newPosition = cursorStartPosition + insertText.length;\r\n                const newPosition1 = newPosition + newCursorPositions[0];\r\n                const newPosition2 = newPosition + newCursorPositions[1];\r\n\r\n                element[0].setSelectionRange(newPosition1, newPosition2);\r\n            }\r\n        }\r\n        this.isActive = false;\r\n    }\r\n}\r\n\r\n$.fn.autoSuggest = function(options) {\r\n    if (options instanceof AutoSuggest) {\r\n        options.addInputs(this);\r\n        return options;\r\n    } else {\r\n        return new AutoSuggest(options, this);\r\n    }\r\n};\r\n\r\nexport default AutoSuggest;\r\n"],"names":["Utilities","data","context","object","keys","concat","forEach","key","Error","type","value","element1","element2","style1","window","getComputedStyle","$","style2","prototype","call","property","getPropertyValue","css","obj","element","left","top","offsetLeft","offsetTop","offsetParent","createTextRange","range","inputStyle","undefined","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","position","input","selectionDirection","selectionStart","selectionEnd","document","selection","focus","createRange","moveStart","length","text","html","jQuery","defaultOptions","validateSuggestions","suggestions","ignoreOn","map","suggestion","on","show","ensure","ensureType","cursorPosition","constructor","Array","SuggestionList","options","extend","getSuggestions","keyword","callback","match","RegExp","caseSensitive","filter","matchFound","i","test","trigger","escapedTrigger","split","join","regex","SuggestionDropdown","width","hidden","dropdownContent","dropdown","append","hide","style","find","removeClass","addClass","onSet","self","empty","dropdownLink","mousedown","setWidth","activeLink","nextLink","next","getValue","prevLink","prev","extendFromGlobalOptions","currentOptions","globalOptions","optionList","option","getCaretPosition","originalValue","val","getCursorPosition","slice","remove","clone","cloneContent","htmlEncode","cloneStyle","elementPosition","getGlobalOffset","is","overflowX","whiteSpace","Math","min","getScrollLeftForInput","scrollTop","caretPosition","AutoSuggest","inputs","isActive","activeElement","activeElementCursorPosition","activeSuggestionList","suggestionLists","currentSuggestionList","addInputs","each","that","isContentEditable","results","fill","setValue","keydown","event","originalEvent","newValue","e","keyCode","preventDefault","stopImmediatePropagation","blur","suggestionList","insertText","replaceWith","currentValue","pop","cursorStartPosition","newCursorPositions","newPosition","newPosition1","newPosition2","setSelectionRange","fn","autoSuggest"],"mappings":"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"}