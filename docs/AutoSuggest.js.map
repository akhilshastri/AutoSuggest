{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["const Utilities = {\r\n    noop: () => {},\r\n    noopd: data => data,\r\n\r\n    ensure: (context, object, keys) => {\r\n        [].concat(keys).forEach(key => {\r\n            if (typeof object[key] === 'undefined') {\r\n                throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n            }\r\n        });\r\n    },\r\n    ensureType: (context, object, key, type) => {\r\n        [].concat(object[key]).forEach(value => {\r\n            if (typeof value !== type) {\r\n                throw new Error(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n            }\r\n        });\r\n    },\r\n\r\n    cloneStyle: (element1, element2) => {\r\n        const style1 = window.getComputedStyle($(element1)[0], null);\r\n        const style2 = {};\r\n\r\n        Array.prototype.forEach.call(style1, property => {\r\n            style2[property] = style1.getPropertyValue(property);\r\n        });\r\n        $(element2).css(style2);\r\n    },\r\n    getGlobalOffset: element => {\r\n        let obj = element;\r\n        let left = 0;\r\n        let top = 0;\r\n        do {\r\n            left += obj.offsetLeft;\r\n            top += obj.offsetTop;\r\n        } while (obj = obj.offsetParent);\r\n        return {left, top};\r\n    },\r\n    getScrollLeftForInput: element => {\r\n        if(element.createTextRange) {\r\n            const range = element.createTextRange();\r\n            const inputStyle = window.getComputedStyle(element, undefined);\r\n            const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n            const rangeRect = range.getBoundingClientRect();\r\n            return element.getBoundingClientRect().left + element.clientLeft + paddingLeft - rangeRect.left;\r\n        } else {\r\n            return $(element).scrollLeft();\r\n        }\r\n    },\r\n    getCursorPosition: input => {\r\n        let position = 0;\r\n\r\n        if (typeof input.selectionDirection !== 'undefined') {\r\n            position = input.selectionDirection === 'backward' ? input.selectionStart : input.selectionEnd;\r\n        } else if (document.selection) {\r\n            input.focus();\r\n            const selection = document.selection.createRange();\r\n            selection.moveStart('character', - input.value.length);\r\n            position = selection.text.length;\r\n        }\r\n\r\n        return position;\r\n    },\r\n\r\n    htmlEncode: value => String(value).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;'),\r\n    data: (element, key, value) => {\r\n        key = 'autosuggest_' + key;\r\n        if (typeof value !== 'undefined') {\r\n            element.dataset[key] = JSON.stringify(value);\r\n        } else {\r\n            value = element.dataset[key];\r\n            return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Utilities;\r\n","import Utilities from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions, ignoreOn) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                show: suggestion,\r\n                replaceWith: suggestion,\r\n                cursorPosition: [0, 0]\r\n            };\r\n\r\n            if (!ignoreOn) {\r\n                suggestion.on = [suggestion.show];\r\n            }\r\n        } else if (type === 'object') {\r\n            Utilities.ensure('Suggestion', suggestion, ['show', 'replaceWith']);\r\n            Utilities.ensureType('Suggestion', suggestion, 'show', 'string');\r\n            Utilities.ensureType('Suggestion', suggestion, 'replaceWith', 'string');\r\n            suggestion.cursorPosition = suggestion.cursorPosition || [0, 0];\r\n            if (suggestion.cursorPosition.constructor !== Array) {\r\n                suggestion.cursorPosition = [suggestion.cursorPosition, suggestion.cursorPosition];\r\n            }\r\n\r\n            if (!ignoreOn) {\r\n                Utilities.ensure('Suggestion', suggestion, 'on');\r\n                Utilities.ensureType('Suggestion', suggestion, 'on', 'string');\r\n                suggestion.on = [].concat(suggestion.on);\r\n            }\r\n        }\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = {\r\n            values: options\r\n        };\r\n    }\r\n\r\n    Utilities.ensure('SuggestionList', options, 'values');\r\n    if (typeof options.caseSensitive === 'undefined') {\r\n        options.caseSensitive = true;\r\n    }\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = (keyword, callback) => {\r\n            options.values(keyword, values => callback(validateSuggestions(values, true)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const matcher = new RegExp(keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.values.filter(value => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < value.on.length; i++) {\r\n                        if (matchFound = matcher.test(value.on[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    const trigger = options.trigger;\r\n    if (trigger && typeof trigger !== 'string') {\r\n        throw new Error('AutoSuggest: Invalid Type, SuggestionList.trigger should be a string');\r\n    }\r\n\r\n    if (trigger) {\r\n        const escapedTrigger = `\\\\${trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n\r\n    this.trigger = trigger;\r\n}\r\n\r\nexport default SuggestionList;\r\n","import Utilities from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n        }\r\n\r\n        const activeElement = this.getActive();\r\n        activeElement && activeElement.classList.remove('active');\r\n        this.dropdownContent.firstElementChild.classList.add('active');\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLinkHTML = `<li><a>${suggestion.show}</a></li>`;\r\n            this.dropdownContent.innerHTML += dropdownLinkHTML;\r\n\r\n            const dropdownLink = this.dropdownContent.lastElementChild;\r\n            Utilities.data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (this.isActive) {\r\n            this.setWidth();\r\n            if (this.dropdown.style.top);\r\n        } else {\r\n            this.show();\r\n            this.setWidth();\r\n            this.hide();\r\n        }\r\n\r\n        this.isEmpty = false;\r\n    }\r\n\r\n    setWidth() {\r\n        this.width = this.dropdownContent.offsetWidth;\r\n    }\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return Utilities.data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    next() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        nextLink.classList.add('active');\r\n\r\n        return this.getValue(nextLink);\r\n    }\r\n\r\n    prev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.prevElementSibling || this.dropdownContent.lastElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        prevLink.classList.add('active');\r\n\r\n        return this.getValue(prevLink);\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import Utilities from './Utilities';\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction getCaretPosition(element, cursorPosition) {\r\n    if (Utilities.data(element, 'isInput')) {\r\n        const originalValue = element.value;\r\n        const value = originalValue.slice(0, cursorPosition);\r\n\r\n        //Create a clone of our input field using div and copy value into div\r\n        //Wrap last character in a span to get its position\r\n        const oldclone = document.getElementById('autosuggest-positionclone');\r\n        if (oldclone) {\r\n            document.body.removeChild(oldclone);\r\n        }\r\n\r\n        const clone = document.createElement('div');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(Utilities.htmlEncode(value.slice(-1))));\r\n\r\n        clone.appendChild(document.createTextNode(Utilities.htmlEncode(value.slice(0, -1))));\r\n        clone.appendChild(positioner);\r\n        clone.appendChild(document.createTextNode(Utilities.htmlEncode(originalValue.slice(cursorPosition))));\r\n        Utilities.cloneStyle(element, clone);\r\n\r\n        //Get position of element and overlap our clone on the element\r\n        const elementPosition = Utilities.getGlobalOffset(element);\r\n\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n\r\n        //append clone and scroll\r\n        document.body.appendChild(clone);\r\n\r\n        //Extra styles for the clone depending on type of input\r\n        if (element.tagName === 'INPUT') {\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === originalValue.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(Utilities.getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n        } else {\r\n            clone.style.maxWidth = '100%';\r\n            clone.scrollTop = element.scrollTop();\r\n            clone.scrollLeft = element.scrollLeft();\r\n        }\r\n\r\n        //Get position of span\r\n        const caretPosition = Utilities.getGlobalOffset(positioner);\r\n        caretPosition.left += 10 - clone.scrollLeft;\r\n        caretPosition.top += 28 - clone.scrollTop;\r\n        document.body.removeChild(clone);\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst setValue = ({ element, trigger, cursorPosition, suggestion }) => {\r\n    const insertText = suggestion.replaceWith;\r\n\r\n    if (element) {\r\n        if (Utilities.data(element, 'isInput')) {\r\n            const originalValue = element.value;\r\n            let value = originalValue.slice(0, cursorPosition);\r\n            const currentValue = value.split(trigger || /\\W/).pop();\r\n\r\n            value = value.slice(0, 0 - currentValue.length - (trigger || '').length);\r\n            const cursorStartPosition = value.length;\r\n\r\n            element.value = value + insertText + originalValue.slice(cursorPosition);\r\n            element.focus();\r\n\r\n            const newCursorPositions = suggestion.cursorPosition;\r\n            const newPosition = cursorStartPosition + insertText.length;\r\n            const newPosition1 = newPosition + newCursorPositions[0];\r\n            const newPosition2 = newPosition + newCursorPositions[1];\r\n\r\n            element.setSelectionRange(newPosition1, newPosition2);\r\n        }\r\n    }\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (!suggestionList.values) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (typeof suggestionList.caseSensitive === 'undefined' && typeof options.caseSensitive !== 'undefined') {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeElement = null;\r\n            let activeSuggestionList = null;\r\n            let activeElementCursorPosition = 0;\r\n\r\n\r\n            this.onBlurHandler = function() {\r\n                activeElement = null;\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onFocusHandler = function() {\r\n                activeElement = this;\r\n            };\r\n\r\n            this.onInputHandler = function() {\r\n                let value = this.value;\r\n\r\n                if (Utilities.data(this, 'isInput')) {\r\n                    const cursorPosition = Utilities.getCursorPosition(this);\r\n\r\n                    value = value.slice(0, cursorPosition);\r\n                    activeElementCursorPosition = cursorPosition;\r\n                }\r\n\r\n                handleDropdown: {\r\n                    const execute = (() => {\r\n                        let i = 0;\r\n                        const queue = [];\r\n\r\n                        return (f, j) => {\r\n                            queue[j - i] = f;\r\n                            while (!!queue[0]) ++i, queue.shift()();\r\n                        };\r\n                    })();\r\n\r\n                    let i = 0;\r\n                    let triggerMatchFound = false;\r\n\r\n                    self.dropdown.empty();\r\n                    for (let suggestionList of self.suggestionLists) {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n                            activeSuggestionList = suggestionList;\r\n\r\n                            const match = value.match(suggestionList.regex)[1];\r\n                            (i => {\r\n                                suggestionList.getSuggestions(match, results => {\r\n                                    execute(() => {\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                self.dropdown.fill(results, suggestion => {\r\n                                                    setValue({\r\n                                                        element: this,\r\n                                                        trigger: suggestionList.trigger,\r\n                                                        cursorPosition: activeElementCursorPosition,\r\n                                                        suggestion: suggestion,\r\n                                                    });\r\n                                                });\r\n                                                self.dropdown.show(getCaretPosition(this, activeElementCursorPosition));\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++);\r\n                        }\r\n                    }\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                if (self.dropdown.isActive) {\r\n                    let newValue;\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            cursorPosition: activeElementCursorPosition,\r\n                            suggestion: self.dropdown.getValue()\r\n                        });\r\n                        self.dropdown.hide();\r\n                    } else if (e.keyCode == 40) {\r\n                        newValue = self.dropdown.next();\r\n                    } else if (e.keyCode == 38) {\r\n                        newValue = self.dropdown.prev();\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopImmediatePropagation();\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.isContentEditable) {\r\n                Utilities.data(input, 'isInput', false)\r\n            } else if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text')) {\r\n                Utilities.data(input, 'isInput', true)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('focus', this.onFocusHandler);\r\n\r\n            input.addEventListener('input', this.onInputHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler);\r\n\r\n            Utilities.data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = Utilities.data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.slice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('focus', this.onFocusHandler);\r\n\r\n                input.removeEventListener('input', this.onInputHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["Utilities","data","context","object","keys","concat","forEach","key","Error","type","value","element1","element2","style1","window","getComputedStyle","$","style2","prototype","call","property","getPropertyValue","css","obj","element","left","top","offsetLeft","offsetTop","offsetParent","createTextRange","range","inputStyle","undefined","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","position","input","selectionDirection","selectionStart","selectionEnd","document","selection","focus","createRange","moveStart","length","text","String","replace","dataset","JSON","stringify","parse","validateSuggestions","suggestions","ignoreOn","map","suggestion","on","show","ensure","ensureType","cursorPosition","constructor","Array","SuggestionList","options","values","caseSensitive","getSuggestions","keyword","callback","matcher","RegExp","filter","matchFound","i","test","trigger","escapedTrigger","split","join","regex","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","createElement","className","dropdown","style","hide","appendChild","body","offsetWidth","classList","remove","add","activeElement","getActive","firstElementChild","display","innerHTML","onSet","dropdownLinkHTML","dropdownLink","lastElementChild","addEventListener","e","preventDefault","stopPropagation","setWidth","activeLinks","slice","querySelectorAll","pop","activeLink","nextLink","nextElementSibling","getValue","prevLink","prevElementSibling","getCaretPosition","originalValue","oldclone","getElementById","removeChild","clone","id","positioner","createTextNode","htmlEncode","cloneStyle","elementPosition","getGlobalOffset","opacity","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","Math","min","getScrollLeftForInput","maxWidth","scrollTop","caretPosition","setValue","insertText","replaceWith","currentValue","cursorStartPosition","newCursorPositions","newPosition","newPosition1","newPosition2","setSelectionRange","AutoSuggest","inputs","suggestionLists","suggestionList","self","activeSuggestionList","activeElementCursorPosition","onBlurHandler","onFocusHandler","onInputHandler","getCursorPosition","execute","queue","f","j","shift","triggerMatchFound","empty","match","results","fill","onKeyDownHandler","newValue","keyCode","next","prev","stopImmediatePropagation","addInputs","args","apply","d","isContentEditable","push","index","isNaN","removeEventListener","removeInputs"],"mappings":"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"}