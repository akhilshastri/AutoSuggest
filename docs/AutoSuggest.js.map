{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["export const htmlEncode = value =>\r\n    String(value).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\r\n\r\nexport const ensure = (context, object, keys) => {\r\n    [].concat(keys).forEach(key => {\r\n        if (typeof object[key] === 'undefined') {\r\n            throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n        }\r\n    });\r\n};\r\nexport const ensureType = (context, object, key, type) => {\r\n    [].concat(object[key]).forEach(value => {\r\n        if (typeof value !== type) {\r\n            throw new Error(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n        }\r\n    });\r\n};\r\n\r\nexport const cloneStyle = (element1, element2) => {\r\n    const allStyles = window.getComputedStyle(element1);\r\n    for (let style in allStyles) {\r\n        if (allStyles.hasOwnProperty(style)) {\r\n            element2.style.setProperty(style, allStyles[style]);\r\n        }\r\n    }\r\n};\r\nexport const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return {left, top};\r\n};\r\n\r\nexport const getScrollLeftForInput = element => {\r\n    if(element.createTextRange) {\r\n        const range = element.createTextRange();\r\n        const inputStyle = window.getComputedStyle(element);\r\n        const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n        const rangeRect = range.getBoundingClientRect();\r\n        return element.getBoundingClientRect().left + element.clientLeft + paddingLeft - rangeRect.left;\r\n    } else {\r\n        return element.scrollLeft;\r\n    }\r\n};\r\nexport const getCursorPosition = input => {\r\n    let position = 0;\r\n\r\n    if (typeof input.selectionDirection !== 'undefined') {\r\n        position = input.selectionDirection === 'backward' ? input.selectionStart : input.selectionEnd;\r\n    } else if (document.selection) {\r\n        input.focus();\r\n        const selection = document.selection.createRange();\r\n        selection.moveStart('character', - input.value.length);\r\n        position = selection.text.length;\r\n    }\r\n\r\n    return position;\r\n};\r\n\r\nexport const makeAsyncQueueRunner = () => {\r\n    let i = 0;\r\n    const queue = [];\r\n\r\n    return (f, j) => {\r\n        queue[j - i] = f;\r\n        while (queue[0]) ++i, queue.shift()();\r\n    };\r\n};\r\n\r\nexport const data = (element, key, value) => {\r\n    key = 'autosuggest_' + key;\r\n    if (typeof value !== 'undefined') {\r\n        element.dataset[key] = JSON.stringify(value);\r\n    } else {\r\n        value = element.dataset[key];\r\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n    }\r\n};\r\n","import { ensure, ensureType } from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions, ignoreOn) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                show: suggestion,\r\n                replaceWith: suggestion,\r\n                cursorPosition: [0, 0]\r\n            };\r\n\r\n            if (!ignoreOn) {\r\n                suggestion.on = [suggestion.show];\r\n            }\r\n        } else if (type === 'object') {\r\n            ensure('Suggestion', suggestion, ['show', 'replaceWith']);\r\n            ensureType('Suggestion', suggestion, 'show', 'string');\r\n            ensureType('Suggestion', suggestion, 'replaceWith', 'string');\r\n            suggestion.cursorPosition = suggestion.cursorPosition || [0, 0];\r\n            if (suggestion.cursorPosition.constructor !== Array) {\r\n                suggestion.cursorPosition = [suggestion.cursorPosition, suggestion.cursorPosition];\r\n            }\r\n\r\n            if (!ignoreOn) {\r\n                ensure('Suggestion', suggestion, 'on');\r\n                ensureType('Suggestion', suggestion, 'on', 'string');\r\n                suggestion.on = [].concat(suggestion.on);\r\n            }\r\n        }\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = {\r\n            values: options\r\n        };\r\n    }\r\n\r\n    ensure('SuggestionList', options, 'values');\r\n    if (typeof options.caseSensitive === 'undefined') {\r\n        options.caseSensitive = true;\r\n    }\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = (keyword, callback) => {\r\n            options.values(keyword, values => callback(validateSuggestions(values, true)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const matcher = new RegExp(keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.values.filter(value => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < value.on.length; i++) {\r\n                        if (matchFound = matcher.test(value.on[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    const trigger = options.trigger;\r\n    if (trigger && typeof trigger !== 'string') {\r\n        throw new Error('AutoSuggest: Invalid Type, SuggestionList.trigger should be a string');\r\n    }\r\n\r\n    if (trigger) {\r\n        const escapedTrigger = `\\\\${trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+?)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n\r\n    this.trigger = trigger;\r\n}\r\n\r\nexport default SuggestionList;\r\n","import { data } from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n        }\r\n\r\n        const activeElement = this.getActive();\r\n        activeElement && activeElement.classList.remove('active');\r\n        this.dropdownContent.firstElementChild.classList.add('active');\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLinkHTML = `<li><a>${suggestion.show}</a></li>`;\r\n            this.dropdownContent.innerHTML += dropdownLinkHTML;\r\n\r\n            const dropdownLink = this.dropdownContent.lastElementChild;\r\n            data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (this.isActive) {\r\n            this.setWidth();\r\n            if (this.dropdown.style.top);\r\n        } else {\r\n            this.show();\r\n            this.setWidth();\r\n            this.hide();\r\n        }\r\n\r\n        this.isEmpty = false;\r\n    }\r\n\r\n    setWidth() {\r\n        this.width = this.dropdownContent.offsetWidth;\r\n    }\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    selectNext() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        nextLink.classList.add('active');\r\n\r\n        return this.getValue(nextLink);\r\n    }\r\n\r\n    selectPrev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.previousElementSibling || this.dropdownContent.lastElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        prevLink.classList.add('active');\r\n\r\n        return this.getValue(prevLink);\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import {\r\n    data, cloneStyle,\r\n    getGlobalOffset,\r\n    getCursorPosition,\r\n    getScrollLeftForInput,\r\n    makeAsyncQueueRunner\r\n} from './Utilities';\r\n\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction getCaretPosition(element, cursorPosition) {\r\n    if (data(element, 'isInput')) {\r\n        const originalValue = element.value;\r\n        const value = originalValue.slice(0, cursorPosition);\r\n\r\n        const clone = document.createElement('pre');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        //Create a clone of our input field using div and copy value into div\r\n        //Wrap last character in a span to get its position\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(value.slice(-1)));\r\n\r\n        clone.appendChild(document.createTextNode(value.slice(0, -1)));\r\n        clone.appendChild(positioner);\r\n        clone.appendChild(document.createTextNode(originalValue.slice(cursorPosition)));\r\n        cloneStyle(element, clone);\r\n\r\n        //Get position of element and overlap our clone on the element\r\n        const elementPosition = getGlobalOffset(element);\r\n\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n\r\n        //append clone and scroll\r\n        document.body.appendChild(clone);\r\n\r\n        //Extra styles for the clone depending on type of input\r\n        if (element.tagName === 'INPUT') {\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === originalValue.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n        } else {\r\n            clone.style.maxWidth = '100%';\r\n            clone.scrollTop = element.scrollTop;\r\n            clone.scrollLeft = element.scrollLeft;\r\n        }\r\n\r\n        //Get position of span\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        caretPosition.left += 10 - clone.scrollLeft;\r\n        caretPosition.top += 28 - clone.scrollTop;\r\n        document.body.removeChild(clone);\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst setValue = ({ element, trigger, cursorPosition, suggestion }) => {\r\n    const insertText = suggestion.replaceWith;\r\n\r\n    if (element) {\r\n        if (data(element, 'isInput')) {\r\n            const originalValue = element.value;\r\n            let value = originalValue.slice(0, cursorPosition);\r\n            const currentValue = value.split(trigger || /\\W/).pop();\r\n\r\n            value = value.slice(0, 0 - currentValue.length - (trigger || '').length);\r\n            const cursorStartPosition = value.length;\r\n\r\n            element.value = value + insertText + originalValue.slice(cursorPosition);\r\n            element.focus();\r\n\r\n            const newCursorPositions = suggestion.cursorPosition;\r\n            const newPosition = cursorStartPosition + insertText.length;\r\n            const newPosition1 = newPosition + newCursorPositions[0];\r\n            const newPosition2 = newPosition + newCursorPositions[1];\r\n\r\n            element.setSelectionRange(newPosition1, newPosition2);\r\n        }\r\n    }\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (suggestionList.constructor !== Object) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (!suggestionList.hasOwnProperty('caseSensitive') && options.hasOwnProperty('caseSensitive')) {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeSuggestionList = null;\r\n            let activeElementCursorPosition = 0;\r\n            let handledInKeyDown = false;\r\n\r\n            this.onBlurHandler = function() {\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                handledInKeyDown = false;\r\n                if (self.dropdown.isActive) {\r\n                    const preventDefaultAction = () => {\r\n                        e.preventDefault();\r\n                        handledInKeyDown = true;\r\n                    };\r\n\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            cursorPosition: activeElementCursorPosition,\r\n                            suggestion: self.dropdown.getValue()\r\n                        });\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 40) {\r\n                        self.dropdown.selectNext();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 38) {\r\n                        self.dropdown.selectPrev();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 27) {\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.onKeyUpHandler = function(e) {\r\n                if (handledInKeyDown) {\r\n                    return;\r\n                }\r\n\r\n                let value = this.value;\r\n                if (data(this, 'isInput')) {\r\n                    const cursorPosition = getCursorPosition(this);\r\n                    value = value.slice(0, cursorPosition);\r\n                    activeElementCursorPosition = cursorPosition;\r\n                }\r\n\r\n                handleDropdown: {\r\n                    let i = 0, triggerMatchFound = false;\r\n                    const execute = makeAsyncQueueRunner();\r\n\r\n                    self.dropdown.empty();\r\n                    for (let suggestionList of self.suggestionLists) {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n\r\n                            (i => {\r\n                                const match = value.match(suggestionList.regex)[1];\r\n                                suggestionList.getSuggestions(match, results => {\r\n                                    execute(() => {\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                activeSuggestionList = suggestionList;\r\n\r\n                                                self.dropdown.fill(results, suggestion => {\r\n                                                    setValue({\r\n                                                        element: this,\r\n                                                        trigger: suggestionList.trigger,\r\n                                                        cursorPosition: activeElementCursorPosition,\r\n                                                        suggestion: suggestion,\r\n                                                    });\r\n                                                });\r\n\r\n                                                const caretPosition = getCaretPosition(this, activeElementCursorPosition);\r\n                                                self.dropdown.show(caretPosition);\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++);\r\n                        }\r\n                    }\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.isContentEditable) {\r\n                data(input, 'isInput', false)\r\n            } else if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text')) {\r\n                data(input, 'isInput', true)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","value","cloneStyle","element1","element2","allStyles","window","getComputedStyle","style","hasOwnProperty","setProperty","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","getScrollLeftForInput","element","createTextRange","range","inputStyle","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","getCursorPosition","position","input","selectionDirection","selectionStart","selectionEnd","document","selection","focus","createRange","moveStart","length","text","makeAsyncQueueRunner","i","queue","f","j","shift","data","dataset","JSON","stringify","parse","validateSuggestions","suggestions","ignoreOn","map","suggestion","on","show","cursorPosition","constructor","Array","SuggestionList","options","values","caseSensitive","getSuggestions","keyword","callback","matcher","RegExp","filter","matchFound","test","trigger","escapedTrigger","split","join","regex","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","createElement","className","dropdown","hide","appendChild","body","offsetWidth","classList","remove","add","activeElement","getActive","firstElementChild","display","innerHTML","onSet","dropdownLinkHTML","dropdownLink","lastElementChild","addEventListener","e","preventDefault","stopPropagation","setWidth","activeLinks","prototype","slice","call","querySelectorAll","pop","activeLink","nextLink","nextElementSibling","getValue","prevLink","previousElementSibling","getCaretPosition","originalValue","clone","id","positioner","createTextNode","elementPosition","opacity","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","Math","min","maxWidth","scrollTop","caretPosition","removeChild","setValue","insertText","replaceWith","currentValue","cursorStartPosition","newCursorPositions","newPosition","newPosition1","newPosition2","setSelectionRange","AutoSuggest","inputs","suggestionLists","suggestionList","Object","self","activeSuggestionList","activeElementCursorPosition","handledInKeyDown","onBlurHandler","onKeyDownHandler","preventDefaultAction","keyCode","selectNext","selectPrev","onKeyUpHandler","triggerMatchFound","execute","empty","match","results","fill","addInputs","args","apply","d","isContentEditable","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,SAAS,SAATA,MAAS,CAACC,OAAD,EAAUC,MAAV,EAAkBC,IAAlB,EAA2B;OAC1CC,MAAH,CAAUD,IAAV,EAAgBE,OAAhB,CAAwB,eAAO;YACvB,OAAOH,OAAOI,GAAP,CAAP,KAAuB,WAA3B,EAAwC;kBAC9B,IAAIC,KAAJ,+CAAsDN,OAAtD,SAAiEK,GAAjE,CAAN;;KAFR;CADG;AAOP,AAAO,IAAME,aAAa,SAAbA,UAAa,CAACP,OAAD,EAAUC,MAAV,EAAkBI,GAAlB,EAAuBG,IAAvB,EAAgC;OACnDL,MAAH,CAAUF,OAAOI,GAAP,CAAV,EAAuBD,OAAvB,CAA+B,iBAAS;YAChC,QAAOK,KAAP,yCAAOA,KAAP,OAAiBD,IAArB,EAA2B;kBACjB,IAAIF,KAAJ,oCAA2CN,OAA3C,SAAsDK,GAAtD,mBAAuEG,IAAvE,CAAN;;KAFR;CADG;;AAQP,AAAO,IAAME,aAAa,SAAbA,UAAa,CAACC,QAAD,EAAWC,QAAX,EAAwB;QACxCC,YAAYC,OAAOC,gBAAP,CAAwBJ,QAAxB,CAAlB;SACK,IAAIK,KAAT,IAAkBH,SAAlB,EAA6B;YACrBA,UAAUI,cAAV,CAAyBD,KAAzB,CAAJ,EAAqC;qBACxBA,KAAT,CAAeE,WAAf,CAA2BF,KAA3B,EAAkCH,UAAUG,KAAV,CAAlC;;;CAJL;AAQP,AAAO,IAAMG,kBAAkB,SAAlBA,eAAkB,KAAM;QAC7BC,OAAOC,EAAX;QAAeC,MAAM,CAArB;QAAwBC,OAAO,CAA/B;;OAEG;gBACSH,KAAKI,UAAb;eACOJ,KAAKK,SAAZ;KAFJ,QAGSL,OAAOA,KAAKM,YAHrB;;WAKO,EAACH,UAAD,EAAOD,QAAP,EAAP;CARG;;AAWP,AAAO,IAAMK,wBAAwB,SAAxBA,qBAAwB,UAAW;QACzCC,QAAQC,eAAX,EAA4B;YAClBC,QAAQF,QAAQC,eAAR,EAAd;YACME,aAAajB,OAAOC,gBAAP,CAAwBa,OAAxB,CAAnB;YACMI,cAAcC,WAAWF,WAAWC,WAAtB,CAApB;YACME,YAAYJ,MAAMK,qBAAN,EAAlB;eACOP,QAAQO,qBAAR,GAAgCZ,IAAhC,GAAuCK,QAAQQ,UAA/C,GAA4DJ,WAA5D,GAA0EE,UAAUX,IAA3F;KALJ,MAMO;eACIK,QAAQS,UAAf;;CARD;AAWP,AAAO,IAAMC,oBAAoB,SAApBA,iBAAoB,QAAS;QAClCC,WAAW,CAAf;;QAEI,OAAOC,MAAMC,kBAAb,KAAoC,WAAxC,EAAqD;mBACtCD,MAAMC,kBAAN,KAA6B,UAA7B,GAA0CD,MAAME,cAAhD,GAAiEF,MAAMG,YAAlF;KADJ,MAEO,IAAIC,SAASC,SAAb,EAAwB;cACrBC,KAAN;YACMD,YAAYD,SAASC,SAAT,CAAmBE,WAAnB,EAAlB;kBACUC,SAAV,CAAoB,WAApB,EAAiC,CAAER,MAAM/B,KAAN,CAAYwC,MAA/C;mBACWJ,UAAUK,IAAV,CAAeD,MAA1B;;;WAGGV,QAAP;CAZG;;AAeP,AAAO,IAAMY,uBAAuB,SAAvBA,oBAAuB,GAAM;QAClCC,IAAI,CAAR;QACMC,QAAQ,EAAd;;WAEO,UAACC,CAAD,EAAIC,CAAJ,EAAU;cACPA,IAAIH,CAAV,IAAeE,CAAf;eACOD,MAAM,CAAN,CAAP;cAAmBD,CAAF,EAAKC,MAAMG,KAAN,IAAL;;KAFrB;CAJG;;AAUP,AAAO,IAAMC,OAAO,SAAPA,IAAO,CAAC7B,OAAD,EAAUvB,GAAV,EAAeI,KAAf,EAAyB;UACnC,iBAAiBJ,GAAvB;QACI,OAAOI,KAAP,KAAiB,WAArB,EAAkC;gBACtBiD,OAAR,CAAgBrD,GAAhB,IAAuBsD,KAAKC,SAAL,CAAenD,KAAf,CAAvB;KADJ,MAEO;gBACKmB,QAAQ8B,OAAR,CAAgBrD,GAAhB,CAAR;eACO,OAAOI,KAAP,KAAiB,WAAjB,GAA+BkD,KAAKE,KAAL,CAAWjC,QAAQ8B,OAAR,CAAgBrD,GAAhB,CAAX,CAA/B,GAAkEI,KAAzE;;CAND;;ACvEP,SAASqD,mBAAT,CAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;WAC1C,GAAG7D,MAAH,CAAU4D,WAAV,EAAuBE,GAAvB,CAA2B,sBAAc;YACtCzD,cAAc0D,UAAd,yCAAcA,UAAd,CAAN;YACI1D,SAAS,QAAb,EAAuB;yBACN;sBACH0D,UADG;6BAEIA,UAFJ;gCAGO,CAAC,CAAD,EAAI,CAAJ;aAHpB;;gBAMI,CAACF,QAAL,EAAe;2BACAG,EAAX,GAAgB,CAACD,WAAWE,IAAZ,CAAhB;;SARR,MAUO,IAAI5D,SAAS,QAAb,EAAuB;mBACnB,YAAP,EAAqB0D,UAArB,EAAiC,CAAC,MAAD,EAAS,aAAT,CAAjC;uBACW,YAAX,EAAyBA,UAAzB,EAAqC,MAArC,EAA6C,QAA7C;uBACW,YAAX,EAAyBA,UAAzB,EAAqC,aAArC,EAAoD,QAApD;uBACWG,cAAX,GAA4BH,WAAWG,cAAX,IAA6B,CAAC,CAAD,EAAI,CAAJ,CAAzD;gBACIH,WAAWG,cAAX,CAA0BC,WAA1B,KAA0CC,KAA9C,EAAqD;2BACtCF,cAAX,GAA4B,CAACH,WAAWG,cAAZ,EAA4BH,WAAWG,cAAvC,CAA5B;;;gBAGA,CAACL,QAAL,EAAe;uBACJ,YAAP,EAAqBE,UAArB,EAAiC,IAAjC;2BACW,YAAX,EAAyBA,UAAzB,EAAqC,IAArC,EAA2C,QAA3C;2BACWC,EAAX,GAAgB,GAAGhE,MAAH,CAAU+D,WAAWC,EAArB,CAAhB;;;eAGDD,UAAP;KA3BG,CAAP;;;AA+BJ,SAASM,cAAT,CAAwBC,OAAxB,EAAiC;;QAEzBA,WAAW,CAACA,QAAQC,MAAxB,EAAgC;kBAClB;oBACED;SADZ;;;WAKG,gBAAP,EAAyBA,OAAzB,EAAkC,QAAlC;QACI,OAAOA,QAAQE,aAAf,KAAiC,WAArC,EAAkD;gBACtCA,aAAR,GAAwB,IAAxB;;;QAGA,OAAOF,QAAQC,MAAf,KAA0B,UAA9B,EAA0C;aACjCE,cAAL,GAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;oBACjCJ,MAAR,CAAeG,OAAf,EAAwB;uBAAUC,SAAShB,oBAAoBY,MAApB,EAA4B,IAA5B,CAAT,CAAV;aAAxB;SADJ;KADJ,MAIO,IAAID,QAAQC,MAAR,CAAeJ,WAAf,KAA+BC,KAA/B,IAAwC,OAAOE,QAAQC,MAAf,KAA0B,QAAtE,EAAgF;gBAC3EA,MAAR,GAAiBZ,oBAAoBW,QAAQC,MAA5B,CAAjB;aACKE,cAAL,GAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;gBACnCC,UAAU,IAAIC,MAAJ,CAAWH,OAAX,EAAoB,CAACJ,QAAQE,aAAT,GAAyB,GAAzB,GAA+B,EAAnD,CAAhB;qBAEIF,QAAQC,MAAR,CAAeO,MAAf,CAAsB,iBAAS;oBACvBC,aAAa,KAAjB;qBACK,IAAI9B,IAAI,CAAb,EAAgBA,IAAI3C,MAAM0D,EAAN,CAASlB,MAA7B,EAAqCG,GAArC,EAA0C;wBAClC8B,aAAaH,QAAQI,IAAR,CAAa1E,MAAM0D,EAAN,CAASf,CAAT,CAAb,CAAjB,EAA4C;;;;;uBAKzC8B,UAAP;aARJ,CADJ;SAFJ;;;QAiBEE,UAAUX,QAAQW,OAAxB;QACIA,WAAW,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;cAClC,IAAI9E,KAAJ,CAAU,sEAAV,CAAN;;;QAGA8E,OAAJ,EAAa;YACHC,wBAAsBD,QAAQE,KAAR,CAAc,EAAd,EAAkBC,IAAlB,CAAuB,IAAvB,CAA5B;aACKC,KAAL,GAAa,IAAIR,MAAJ,aAAqBK,cAArB,YAA0CA,cAA1C,aAAb;KAFJ,MAGO;aACEG,KAAL,GAAa,IAAIR,MAAJ,CAAW,mBAAX,CAAb;;;SAGCI,OAAL,GAAeA,OAAf;;;IChFEK;kCACY;;;aACLC,KAAL,GAAa,CAAb;aACKC,OAAL,GAAe,IAAf;aACKC,QAAL,GAAgB,KAAhB;;aAEKC,eAAL,GAAuBjD,SAASkD,aAAT,CAAuB,IAAvB,CAAvB;aACKD,eAAL,CAAqBE,SAArB,GAAiC,kCAAjC;;aAEKC,QAAL,GAAgBpD,SAASkD,aAAT,CAAuB,KAAvB,CAAhB;aACKE,QAAL,CAAcD,SAAd,GAA0B,eAA1B;aACKC,QAAL,CAAchF,KAAd,CAAoBuB,QAApB,GAA+B,UAA/B;;aAEK0D,IAAL;aACKD,QAAL,CAAcE,WAAd,CAA0B,KAAKL,eAA/B;iBACSM,IAAT,CAAcD,WAAd,CAA0B,KAAKF,QAA/B;;;;;6BAGCzD,UAAU;gBACPA,QAAJ,EAAc;qBACLyD,QAAL,CAAchF,KAAd,CAAoBO,IAApB,GAA8BgB,SAAShB,IAAvC;qBACKyE,QAAL,CAAchF,KAAd,CAAoBM,GAApB,GAA6BiB,SAASjB,GAAtC;;oBAEKiB,SAAShB,IAAT,GAAgB,KAAKmE,KAAtB,GAA+B9C,SAASuD,IAAT,CAAcC,WAAjD,EAA8D;yBACrDP,eAAL,CAAqBQ,SAArB,CAA+BC,MAA/B,CAAsC,oBAAtC;yBACKT,eAAL,CAAqBQ,SAArB,CAA+BE,GAA/B,CAAmC,qBAAnC;iBAFJ,MAGO;yBACEV,eAAL,CAAqBQ,SAArB,CAA+BC,MAA/B,CAAsC,qBAAtC;yBACKT,eAAL,CAAqBQ,SAArB,CAA+BE,GAA/B,CAAmC,oBAAnC;;;;gBAIFC,gBAAgB,KAAKC,SAAL,EAAtB;6BACiBD,cAAcH,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B,CAAjB;iBACKT,eAAL,CAAqBa,iBAArB,CAAuCL,SAAvC,CAAiDE,GAAjD,CAAqD,QAArD;;iBAEKP,QAAL,CAAchF,KAAd,CAAoB2F,OAApB,GAA8B,OAA9B;iBACKf,QAAL,GAAgB,IAAhB;;;;+BAGG;iBACEI,QAAL,CAAchF,KAAd,CAAoB2F,OAApB,GAA8B,MAA9B;iBACKf,QAAL,GAAgB,KAAhB;;;;gCAGI;iBACCC,eAAL,CAAqBe,SAArB,GAAiC,EAAjC;iBACKjB,OAAL,GAAe,IAAf;;;;6BAGC5B,aAAa8C,OAAO;;;wBACTzG,OAAZ,CAAoB,sBAAc;oBACxB0G,+BAA6B5C,WAAWE,IAAxC,cAAN;sBACKyB,eAAL,CAAqBe,SAArB,IAAkCE,gBAAlC;;oBAEMC,eAAe,MAAKlB,eAAL,CAAqBmB,gBAA1C;qBACKD,YAAL,EAAmB,YAAnB,EAAiC7C,UAAjC;;6BAEa+C,gBAAb,CAA8B,YAA9B,EAA4C,YAAM;0BACzCR,SAAL,GAAiBJ,SAAjB,CAA2BC,MAA3B,CAAkC,QAAlC;iCACaD,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;iBAFJ;;6BAKaU,gBAAb,CAA8B,WAA9B,EAA2C,UAACC,CAAD,EAAO;0BACxChD,UAAN;0BACK+B,IAAL;sBACEkB,cAAF;sBACEC,eAAF;iBAJJ;aAZJ;;;gBAqBI,KAAKxB,QAAT,EAAmB;qBACVyB,QAAL;oBACI,KAAKrB,QAAL,CAAchF,KAAd,CAAoBM,GAAxB,EAA4B;aAFhC,MAGO;qBACE8C,IAAL;qBACKiD,QAAL;qBACKpB,IAAL;;;iBAGCN,OAAL,GAAe,KAAf;;;;mCAGO;iBACFD,KAAL,GAAa,KAAKG,eAAL,CAAqBO,WAAlC;;;;oCAGQ;gBACFkB,cAAc/C,MAAMgD,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAK5B,eAAL,CAAqB6B,gBAArB,CAAsC,WAAtC,CAA3B,EAA+E,CAA/E,CAApB;mBACOJ,YAAY,CAAZ,CAAP,EAAuB;4BACPK,GAAZ,GAAkBtB,SAAlB,CAA4BC,MAA5B,CAAmC,QAAnC;;;mBAGGgB,YAAY,CAAZ,CAAP;;;;iCAGK1F,SAAS;mBACP6B,KAAM7B,WAAW,KAAK6E,SAAL,EAAjB,EAAoC,YAApC,CAAP;;;;qCAGS;gBACHmB,aAAa,KAAKnB,SAAL,EAAnB;gBACMoB,WAAWD,WAAWE,kBAAX,IAAiC,KAAKjC,eAAL,CAAqBa,iBAAvE;;uBAEWL,SAAX,CAAqBC,MAArB,CAA4B,QAA5B;qBACSD,SAAT,CAAmBE,GAAnB,CAAuB,QAAvB;;mBAEO,KAAKwB,QAAL,CAAcF,QAAd,CAAP;;;;qCAGS;gBACHD,aAAa,KAAKnB,SAAL,EAAnB;gBACMuB,WAAWJ,WAAWK,sBAAX,IAAqC,KAAKpC,eAAL,CAAqBmB,gBAA3E;;uBAEWX,SAAX,CAAqBC,MAArB,CAA4B,QAA5B;qBACSD,SAAT,CAAmBE,GAAnB,CAAuB,QAAvB;;mBAEO,KAAKwB,QAAL,CAAcC,QAAd,CAAP;;;;;;AC7GR,SAASE,gBAAT,CAA0BtG,OAA1B,EAAmCyC,cAAnC,EAAmD;QAC3CZ,KAAK7B,OAAL,EAAc,SAAd,CAAJ,EAA8B;YACpBuG,gBAAgBvG,QAAQnB,KAA9B;YACMA,QAAQ0H,cAAcX,KAAd,CAAoB,CAApB,EAAuBnD,cAAvB,CAAd;;YAEM+D,QAAQxF,SAASkD,aAAT,CAAuB,KAAvB,CAAd;cACMuC,EAAN,GAAW,2BAAX;;;;YAIMC,aAAa1F,SAASkD,aAAT,CAAuB,MAAvB,CAAnB;mBACWI,WAAX,CAAuBtD,SAAS2F,cAAT,CAAwB9H,MAAM+G,KAAN,CAAY,CAAC,CAAb,CAAxB,CAAvB;;cAEMtB,WAAN,CAAkBtD,SAAS2F,cAAT,CAAwB9H,MAAM+G,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAxB,CAAlB;cACMtB,WAAN,CAAkBoC,UAAlB;cACMpC,WAAN,CAAkBtD,SAAS2F,cAAT,CAAwBJ,cAAcX,KAAd,CAAoBnD,cAApB,CAAxB,CAAlB;mBACWzC,OAAX,EAAoBwG,KAApB;;;YAGMI,kBAAkBrH,gBAAgBS,OAAhB,CAAxB;;cAEMZ,KAAN,CAAYyH,OAAZ,GAAsB,CAAtB;cACMzH,KAAN,CAAYuB,QAAZ,GAAuB,UAAvB;cACMvB,KAAN,CAAYM,GAAZ,GAAqBkH,gBAAgBlH,GAArC;cACMN,KAAN,CAAYO,IAAZ,GAAsBiH,gBAAgBjH,IAAtC;;;iBAGS4E,IAAT,CAAcD,WAAd,CAA0BkC,KAA1B;;;YAGIxG,QAAQ8G,OAAR,KAAoB,OAAxB,EAAiC;kBACvB1H,KAAN,CAAY2H,SAAZ,GAAwB,MAAxB;kBACM3H,KAAN,CAAY4H,UAAZ,GAAyB,QAAzB;gBACIvE,mBAAmB8D,cAAclF,MAArC,EAA6C;sBACnCZ,UAAN,GAAmB+F,MAAMS,WAAN,GAAoBT,MAAMU,WAA7C;aADJ,MAEO;sBACGzG,UAAN,GAAmB0G,KAAKC,GAAL,CAASrH,sBAAsBC,OAAtB,CAAT,EAAyCwG,MAAMS,WAAN,GAAoBT,MAAMU,WAAnE,CAAnB;;SANR,MAQO;kBACG9H,KAAN,CAAYiI,QAAZ,GAAuB,MAAvB;kBACMC,SAAN,GAAkBtH,QAAQsH,SAA1B;kBACM7G,UAAN,GAAmBT,QAAQS,UAA3B;;;;YAIE8G,gBAAgBhI,gBAAgBmH,UAAhB,CAAtB;sBACc/G,IAAd,IAAsB,KAAK6G,MAAM/F,UAAjC;sBACcf,GAAd,IAAqB,KAAK8G,MAAMc,SAAhC;iBACS/C,IAAT,CAAciD,WAAd,CAA0BhB,KAA1B;;eAEOe,aAAP;;;;AAIR,IAAME,WAAW,SAAXA,QAAW,OAAsD;QAAnDzH,OAAmD,QAAnDA,OAAmD;QAA1CwD,OAA0C,QAA1CA,OAA0C;QAAjCf,cAAiC,QAAjCA,cAAiC;QAAjBH,UAAiB,QAAjBA,UAAiB;;QAC7DoF,aAAapF,WAAWqF,WAA9B;;QAEI3H,OAAJ,EAAa;YACL6B,KAAK7B,OAAL,EAAc,SAAd,CAAJ,EAA8B;gBACpBuG,gBAAgBvG,QAAQnB,KAA9B;gBACIA,QAAQ0H,cAAcX,KAAd,CAAoB,CAApB,EAAuBnD,cAAvB,CAAZ;gBACMmF,eAAe/I,MAAM6E,KAAN,CAAYF,WAAW,IAAvB,EAA6BuC,GAA7B,EAArB;;oBAEQlH,MAAM+G,KAAN,CAAY,CAAZ,EAAe,IAAIgC,aAAavG,MAAjB,GAA0B,CAACmC,WAAW,EAAZ,EAAgBnC,MAAzD,CAAR;gBACMwG,sBAAsBhJ,MAAMwC,MAAlC;;oBAEQxC,KAAR,GAAgBA,QAAQ6I,UAAR,GAAqBnB,cAAcX,KAAd,CAAoBnD,cAApB,CAArC;oBACQvB,KAAR;;gBAEM4G,qBAAqBxF,WAAWG,cAAtC;gBACMsF,cAAcF,sBAAsBH,WAAWrG,MAArD;gBACM2G,eAAeD,cAAcD,mBAAmB,CAAnB,CAAnC;gBACMG,eAAeF,cAAcD,mBAAmB,CAAnB,CAAnC;;oBAEQI,iBAAR,CAA0BF,YAA1B,EAAwCC,YAAxC;;;CApBZ;;IAyBME;yBACUtF,OAAZ,EAAgC;;;YACxB,CAACA,OAAL,EAAc;kBACJ,IAAInE,KAAJ,oDAAN;;;aAGC0J,MAAL,GAAc,EAAd;aACKhE,QAAL,GAAgB,IAAIP,kBAAJ,EAAhB;;;aAGKwE,eAAL,GAAuBxF,QAAQV,WAAR,IAAuB,EAA9C;aACK,IAAIX,IAAI,CAAb,EAAgBA,IAAI,KAAK6G,eAAL,CAAqBhH,MAAzC,EAAiDG,GAAjD,EAAsD;gBAC9C8G,iBAAiB,KAAKD,eAAL,CAAqB7G,CAArB,CAArB;gBACI,EAAE8G,0BAA0B1F,cAA5B,CAAJ,EAAiD;oBACzC0F,eAAe5F,WAAf,KAA+B6F,MAAnC,EAA2C;qCACtB,EAAEzF,QAAQwF,cAAV,EAAjB;;;oBAGA,CAACA,eAAejJ,cAAf,CAA8B,eAA9B,CAAD,IAAmDwD,QAAQxD,cAAR,CAAuB,eAAvB,CAAvD,EAAgG;mCAC7E0D,aAAf,GAA+BF,QAAQE,aAAvC;;;qBAGCsF,eAAL,CAAqB7G,CAArB,IAA0B,IAAIoB,cAAJ,CAAmB0F,cAAnB,CAA1B;;;;gBAIA;gBACEE,OAAO,IAAb;gBACIC,uBAAuB,IAA3B;gBACIC,8BAA8B,CAAlC;gBACIC,mBAAmB,KAAvB;;iBAEKC,aAAL,GAAqB,YAAW;qBACvBxE,QAAL,CAAcC,IAAd;aADJ;;iBAIKwE,gBAAL,GAAwB,UAASvD,CAAT,EAAY;mCACb,KAAnB;oBACIkD,KAAKpE,QAAL,CAAcJ,QAAlB,EAA4B;wBAClB8E,uBAAuB,SAAvBA,oBAAuB,GAAM;0BAC7BvD,cAAF;2CACmB,IAAnB;qBAFJ;;wBAKID,EAAEyD,OAAF,KAAc,EAAd,IAAoBzD,EAAEyD,OAAF,KAAc,CAAtC,EAAyC;iCAC5B;qCACI,IADJ;qCAEIN,qBAAqBjF,OAFzB;4CAGWkF,2BAHX;wCAIOF,KAAKpE,QAAL,CAAc+B,QAAd;yBAJhB;6BAMK/B,QAAL,CAAcC,IAAd;+BACOyE,sBAAP;qBARJ,MASO,IAAIxD,EAAEyD,OAAF,KAAc,EAAlB,EAAsB;6BACpB3E,QAAL,CAAc4E,UAAd;+BACOF,sBAAP;qBAFG,MAGA,IAAIxD,EAAEyD,OAAF,KAAc,EAAlB,EAAsB;6BACpB3E,QAAL,CAAc6E,UAAd;+BACOH,sBAAP;qBAFG,MAGA,IAAIxD,EAAEyD,OAAF,KAAc,EAAlB,EAAsB;6BACpB3E,QAAL,CAAcC,IAAd;+BACOyE,sBAAP;;;aAzBZ;;iBA8BKI,cAAL,GAAsB,UAAS5D,CAAT,EAAY;;;oBAC1BqD,gBAAJ,EAAsB;;;;oBAIlB9J,QAAQ,KAAKA,KAAjB;oBACIgD,KAAK,IAAL,EAAW,SAAX,CAAJ,EAA2B;wBACjBY,iBAAiB/B,kBAAkB,IAAlB,CAAvB;4BACQ7B,MAAM+G,KAAN,CAAY,CAAZ,EAAenD,cAAf,CAAR;kDAC8BA,cAA9B;;;gCAGY;;4BACRjB,IAAI,CAAR;4BAAW2H,oBAAoB,KAA/B;4BACMC,UAAU7H,sBAAhB;;6BAEK6C,QAAL,CAAciF,KAAd;;mDACSf,eALG;gCAMJA,gBAAe1E,KAAf,CAAqBL,IAArB,CAA0B1E,KAA1B,CAAJ,EAAsC;oDACd,IAApB;;iCAEC,aAAK;wCACIyK,QAAQzK,MAAMyK,KAAN,CAAYhB,gBAAe1E,KAA3B,EAAkC,CAAlC,CAAd;oDACeZ,cAAf,CAA8BsG,KAA9B,EAAqC,mBAAW;gDACpC,YAAM;gDACNd,KAAKpE,QAAL,CAAcL,OAAlB,EAA2B;oDACnBwF,QAAQlI,MAAZ,EAAoB;2EACOiH,eAAvB;;yDAEKlE,QAAL,CAAcoF,IAAd,CAAmBD,OAAnB,EAA4B,sBAAc;iEAC7B;0EAAA;qEAEIjB,gBAAe9E,OAFnB;4EAGWkF,2BAHX;wEAIOpG;yDAJhB;qDADJ;;wDASMiF,gBAAgBjB,wBAAuBoC,2BAAvB,CAAtB;yDACKtE,QAAL,CAAc5B,IAAd,CAAmB+E,aAAnB;iDAbJ,MAcO;yDACEnD,QAAL,CAAcC,IAAd;;;yCAjBZ,EAoBG7C,CApBH;qCADJ;iCAFJ,EAyBGA,GAzBH;;;;;;;;;iDAJmBgH,KAAKH,eAAhC,8HAAiD;oCAAxCC,eAAwC;;sCAAxCA,eAAwC;;;;;;;;;;;;;;;;;4BAiC7C,CAACa,iBAAL,EAAwB;iCACf/E,QAAL,CAAcC,IAAd;;;;aAnDZ;;;;;0CAjEgB+D,MAAQ;kBAAA;;;aA2HvBqB,SAAL,aAAkBrB,MAAlB;;;;;oCAGe;;;+CAANsB,IAAM;oBAAA;;;gBACTtB,SAASzF,MAAMgD,SAAN,CAAgBpH,MAAhB,CAAuBoL,KAAvB,CAA6B,EAA7B,EAAiCD,KAAKrH,GAAL,CAAS;uBAAKuH,EAAE,CAAF,IAAOjH,MAAMgD,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B+D,CAA3B,EAA8B,CAA9B,CAAP,GAA0CA,CAA/C;aAAT,CAAjC,CAAf;;mBAEOpL,OAAP,CAAe,iBAAS;;oBAEhBoC,MAAMiJ,iBAAV,EAA6B;yBACpBjJ,KAAL,EAAY,SAAZ,EAAuB,KAAvB;iBADJ,MAEO,IAAIA,MAAMkG,OAAN,KAAkB,UAAlB,IAAiClG,MAAMkG,OAAN,KAAkB,OAAlB,IAA6BlG,MAAMhC,IAAN,KAAe,MAAjF,EAA0F;yBACxFgC,KAAL,EAAY,SAAZ,EAAuB,IAAvB;iBADG,MAEA;0BACG,IAAIlC,KAAJ,CAAU,0GAAV,CAAN;;;;sBAIE2G,gBAAN,CAAuB,MAAvB,EAA+B,OAAKuD,aAApC;sBACMvD,gBAAN,CAAuB,OAAvB,EAAgC,OAAK6D,cAArC;sBACM7D,gBAAN,CAAuB,SAAvB,EAAkC,OAAKwD,gBAAvC,EAAyD,IAAzD;;qBAEKjI,KAAL,EAAY,OAAZ,EAAqB,OAAKwH,MAAL,CAAY0B,IAAZ,CAAiBlJ,KAAjB,IAA0B,CAA/C;aAfJ;;;;uCAmBkB;;;+CAAN8I,IAAM;oBAAA;;;gBACZtB,SAASzF,MAAMgD,SAAN,CAAgBpH,MAAhB,CAAuBoL,KAAvB,CAA6B,EAA7B,EAAiCD,KAAKrH,GAAL,CAAS;uBAAKuH,EAAE,CAAF,IAAOjH,MAAMgD,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B+D,CAA3B,EAA8B,CAA9B,CAAP,GAA0CA,CAA/C;aAAT,CAAjC,CAAf;;mBAEOpL,OAAP,CAAe,iBAAS;oBACduL,QAAQlI,KAAKjB,KAAL,EAAY,OAAZ,CAAd;oBACI,CAACoJ,MAAMD,KAAN,CAAL,EAAmB;2BACV3B,MAAL,CAAY6B,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;;;0BAGMG,mBAAN,CAA0B,MAA1B,EAAkC,OAAKtB,aAAvC;0BACMsB,mBAAN,CAA0B,OAA1B,EAAmC,OAAKhB,cAAxC;0BACMgB,mBAAN,CAA0B,SAA1B,EAAqC,OAAKrB,gBAA1C,EAA4D,IAA5D;;aARR;;;;kCAaM;iBACDsB,YAAL,CAAkB,KAAK/B,MAAvB;;;;;;;;;;;;"}