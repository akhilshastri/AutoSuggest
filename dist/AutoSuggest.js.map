{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\r\n    [].concat(keys).forEach(key => {\r\n        if (typeof object[key] === 'undefined') {\r\n            throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n        }\r\n    });\r\n};\r\nexport const ensureType = (context, object, key, type) => {\r\n    [].concat(object[key]).forEach(value => {\r\n        if (typeof value !== type) {\r\n            throw new TypeError(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n        }\r\n    });\r\n};\r\n\r\nexport const cloneStyle = (element1, element2) => {\r\n    const allStyles = window.getComputedStyle(element1);\r\n    for (let style in allStyles) {\r\n        if (allStyles.hasOwnProperty(style)) {\r\n            element2.style.setProperty(style, allStyles[style]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getComputedStyle = (element, style) =>\r\n    window.getComputedStyle(element).getPropertyValue(style);\r\n\r\nexport const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return {left, top};\r\n};\r\n\r\nexport const getScrollLeftForInput = input => {\r\n    if (input.createTextRange) {\r\n        const range = input.createTextRange();\r\n        const inputStyle = window.getComputedStyle(input);\r\n        const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n        const rangeRect = range.getBoundingClientRect();\r\n        return input.getBoundingClientRect().left + input.clientLeft + paddingLeft - rangeRect.left;\r\n    } else {\r\n        return input.scrollLeft;\r\n    }\r\n};\r\n\r\nexport const getCursorPosition = input => {\r\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\r\n};\r\n\r\nexport const getSelectedTextNodes = () => {\r\n    const range = window.getSelection().getRangeAt(0);\r\n\r\n    let { startContainer, startOffset } = range;\r\n    if (startContainer.nodeType !== startContainer.TEXT_NODE) {\r\n        startContainer = startContainer.childNodes[startOffset];\r\n        while (startContainer && startContainer.nodeType !== startContainer.TEXT_NODE) {\r\n            startContainer = startContainer.firstChild;\r\n        }\r\n        startOffset = 0;\r\n    }\r\n\r\n    let { endContainer, endOffset } = range;\r\n    if (endContainer.nodeType !== endContainer.TEXT_NODE) {\r\n        endContainer = endContainer.childNodes[endOffset];\r\n        while (endContainer && endContainer.nodeType !== endContainer.TEXT_NODE) {\r\n            endContainer = endContainer.lastChild;\r\n        }\r\n        endOffset = endContainer ? endContainer.nodeValue.length : endContainer;\r\n    }\r\n\r\n    return { startContainer, startOffset, endContainer, endOffset };\r\n};\r\n\r\nexport const makeAsyncQueueRunner = () => {\r\n    let i = 0;\r\n    let queue = [];\r\n\r\n    return (f, j) => {\r\n        queue[j - i] = f;\r\n        while (queue[0]) ++i, queue.shift()();\r\n    };\r\n};\r\n\r\nexport const data = (element, key, value) => {\r\n    key = 'autosuggest_' + key;\r\n    if (typeof value !== 'undefined') {\r\n        element.dataset[key] = JSON.stringify(value);\r\n    } else {\r\n        value = element.dataset[key];\r\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n    }\r\n};\r\n\r\nexport const createNode = html => {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild; \r\n};\r\n","import { ensure, ensureType } from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                on: [suggestion],\r\n                show: suggestion,\r\n                use: suggestion,\r\n                focus: [0, 0]\r\n            };\r\n        } else if (type === 'object') {\r\n            try {\r\n                ensure('Suggestion', suggestion, 'value');\r\n                ensureType('Suggestion', suggestion, 'value', 'string');\r\n            } catch (e1) {\r\n                if (e1 instanceof TypeError)  throw e1;\r\n\r\n                try {\r\n                    ensure('Suggestion', suggestion, ['on', 'show', 'use']);\r\n                } catch(e2) {\r\n                    if (suggestion.on || suggestion.show || suggestion.use) {\r\n                        throw e2;\r\n                    } else {\r\n                        throw e1;\r\n                    }\r\n                }\r\n\r\n                ensureType('Suggestion', suggestion, 'on', 'string');\r\n                ensureType('Suggestion', suggestion, 'use', 'string');\r\n                ensureType('Suggestion', suggestion, 'show', 'string');\r\n            }\r\n\r\n            suggestion.show = suggestion.show || suggestion.value;\r\n            suggestion.use = suggestion.use || suggestion.value;\r\n            suggestion.on = [suggestion.show].concat(suggestion.on || suggestion.value);\r\n\r\n            suggestion.focus = suggestion.focus || [0, 0];\r\n            if (suggestion.focus.constructor !== Array) {\r\n                suggestion.focus = [suggestion.focus, suggestion.focus];\r\n            }\r\n        }\r\n\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = {\r\n            values: options\r\n        };\r\n    }\r\n\r\n    try {\r\n        ensure('SuggestionList', options, 'trigger');\r\n        ensureType('Suggestion', options, 'trigger', 'string');\r\n    } catch (e) {\r\n        if (e instanceof TypeError) throw e;\r\n    }\r\n\r\n    ensure('SuggestionList', options, 'values');\r\n    options.caseSensitive = Boolean(options.caseSensitive);\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = (keyword, callback) => {\r\n            options.values(keyword, values => callback(validateSuggestions(values)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const matcher = new RegExp('^' + keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.values.filter(value => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < value.on.length; i++) {\r\n                        if (value.on[i] !== keyword && (matchFound = matcher.test(value.on[i]))) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    this.trigger = options.trigger;\r\n    if (this.trigger) {\r\n        const escapedTrigger = `\\\\${this.trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+?)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n}\r\n\r\nSuggestionList.prototype.getMatch = function (value) {\r\n    return value.match(this.regex)[1];\r\n};\r\n\r\nexport default SuggestionList;\r\n","import { data, createNode } from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n        }\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        this.empty();\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLink = createNode(`<li><a>${suggestion.show}</a></li>`);\r\n            this.dropdownContent.append(dropdownLink);\r\n            data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (!this.isActive) {\r\n            this.show();\r\n        }\r\n\r\n        this.width = this.dropdownContent.offsetWidth;\r\n\r\n        if (!this.isActive) {\r\n            this.hide();\r\n        }\r\n\r\n        this.setActive();\r\n        this.isEmpty = false;\r\n    }\r\n\r\n    showLoader(position) {\r\n        this.empty();\r\n        this.dropdownContent.innerHTML = '<div class=\"autosuggest-loader\">Loading...</div>';\r\n        this.show(position);\r\n    }\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    setActive(element = this.dropdownContent.firstElementChild, activeLink) {\r\n        activeLink && activeLink.classList.remove('active');\r\n        element.classList.add('active');\r\n    }\r\n\r\n    selectNext() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n        this.setActive(nextLink, activeLink);\r\n    }\r\n\r\n    selectPrev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.previousElementSibling || this.dropdownContent.lastElementChild;\r\n        this.setActive(prevLink, activeLink);\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import {\r\n    data, cloneStyle,\r\n    getGlobalOffset,\r\n    getCursorPosition,\r\n    getScrollLeftForInput,\r\n    makeAsyncQueueRunner,\r\n    getSelectedTextNodes,\r\n    getComputedStyle\r\n} from './Utilities';\r\n\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction splitValue(originalValue, cursorPosition, trigger) {\r\n    const value = originalValue.slice(0, cursorPosition);\r\n    let textAfterTrigger = value.split(trigger || /\\W/).pop();\r\n    const textUptoTrigger = textAfterTrigger.length ? value.slice(0, 0 - textAfterTrigger.length) : value;\r\n    textAfterTrigger += originalValue.slice(cursorPosition);\r\n    return { textAfterTrigger, textUptoTrigger };\r\n}\r\n\r\n// Invisible character\r\nconst POSITIONER_CHARACTER = \"\\ufeff\";\r\nfunction getCaretPosition(element, trigger) {\r\n    if (data(element, 'isInput')) {\r\n        const [cursorPosition] = getCursorPosition(element);\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(element.value, cursorPosition, trigger);\r\n\r\n        // pre to retain special characters\r\n        const clone = document.createElement('pre');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n\r\n        clone.appendChild(document.createTextNode(textUptoTrigger.replace(/ /g, '\\u00A0')));\r\n        clone.appendChild(positioner);\r\n        clone.appendChild(document.createTextNode(textAfterTrigger.replace(/ /g, '\\u00A0')));\r\n        cloneStyle(element, clone);\r\n\r\n        const elementPosition = getGlobalOffset(element);\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n        document.body.appendChild(clone);\r\n\r\n        // Extra styles for the clone depending on type of input\r\n        if (element.tagName === 'INPUT') {\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === element.value.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n        } else {\r\n            clone.style.maxWidth = '100%';\r\n            clone.style.whiteSpace = 'pre-wrap';\r\n            clone.scrollTop = element.scrollTop;\r\n            clone.scrollLeft = element.scrollLeft;\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        caretPosition.left -= clone.scrollLeft;\r\n\r\n        const charHeight = parseFloat(getComputedStyle(positioner, 'line-height'));\r\n        caretPosition.top += charHeight - clone.scrollTop;\r\n\r\n        document.body.removeChild(clone);\r\n        return caretPosition;\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = window.getSelection().getRangeAt(0);\r\n        const { startContainer: containerTextNode, startOffset: cursorPosition } = getSelectedTextNodes();\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(containerTextNode.nodeValue, cursorPosition, trigger);\r\n\r\n        const parentNode = containerTextNode.parentNode;\r\n        const referenceNode = containerTextNode.nextSibling;\r\n\r\n        const positioner = document.createElement(\"span\");\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n        parentNode.insertBefore(positioner, referenceNode);\r\n\r\n        if (textAfterTrigger) {\r\n            containerTextNode.nodeValue = textUptoTrigger;\r\n            const remainingTextNode = document.createTextNode(textAfterTrigger);\r\n            parentNode.insertBefore(remainingTextNode, referenceNode);\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        const charHeight = parseFloat(getComputedStyle(positioner, 'line-height'));\r\n        caretPosition.top += charHeight;\r\n\r\n        // Reset DOM to the state before changes\r\n        parentNode.removeChild(positioner);\r\n        if (textAfterTrigger) {\r\n            parentNode.removeChild(containerTextNode.nextSibling);\r\n            containerTextNode.nodeValue = textUptoTrigger + textAfterTrigger;\r\n        }\r\n\r\n        const selection = window.getSelection().getRangeAt(0);\r\n        selection.setStart(startContainer, startOffset);\r\n        selection.setEnd(endContainer, endOffset);\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst getNextNode = node => {\r\n    let nextNode = node.nextSibling || node.parentNode.nextSibling;\r\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\r\n    return nextNode;\r\n};\r\n\r\nconst setValue = ({ element, trigger, suggestion, onChange }) => {\r\n    const insertText = suggestion.use;\r\n    const focus = suggestion.focus;\r\n\r\n    if (data(element, 'isInput')) {\r\n        const [startPosition, endPosition] = getCursorPosition(element);\r\n        const originalValue = element.value;\r\n        let value = originalValue.slice(0, startPosition);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n        value = value.slice(0, 0 - currentValue.length - (trigger || '').length) + insertText;\r\n        element.value = value + originalValue.slice(endPosition);\r\n        element.focus();\r\n\r\n        const cursorStartPosition = value.length;\r\n        element.setSelectionRange(cursorStartPosition + focus[0], cursorStartPosition + focus[1]);\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n        let value = startContainer.nodeValue.slice(0, startOffset);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n        value = value.slice(0, 0 - currentValue.length - (trigger || '').length) + insertText;\r\n        startContainer.nodeValue = value + endContainer.nodeValue.slice(endOffset);\r\n\r\n        let node = startContainer;\r\n        if (node !== endContainer) {\r\n            node = getNextNode(startContainer);\r\n        }\r\n        while (node !== endContainer) {\r\n            node.parentNode.removeChild(node);\r\n            node = getNextNode(startContainer);\r\n        }\r\n        endContainer.parentNode.removeChild(endContainer);\r\n\r\n        const cursorStartPosition = value.length;\r\n        const selection = window.getSelection().getRangeAt(0);\r\n        selection.setStart(startContainer, cursorStartPosition + focus[0]);\r\n        selection.setEnd(startContainer, cursorStartPosition + focus[1]);\r\n    }\r\n\r\n    onChange(element, suggestion);\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n        this.onChange = options.onChange || Function.prototype;\r\n        this.maxSuggestions = options.maxSuggestions || 10;\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (suggestionList.constructor !== Object) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (!suggestionList.hasOwnProperty('caseSensitive') && options.hasOwnProperty('caseSensitive')) {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeSuggestionList = null;\r\n            let handledInKeyDown = false;\r\n\r\n            this.onBlurHandler = function() {\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                handledInKeyDown = false;\r\n                if (self.dropdown.isActive) {\r\n                    const preventDefaultAction = () => {\r\n                        e.preventDefault();\r\n                        handledInKeyDown = true;\r\n                    };\r\n\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            suggestion: self.dropdown.getValue(),\r\n                            onChange: self.onChange\r\n                        });\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 40) {\r\n                        self.dropdown.selectNext();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 38) {\r\n                        self.dropdown.selectPrev();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 27) {\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    }\r\n                }\r\n            };\r\n\r\n            let keyUpIndex = 0;\r\n            this.onKeyUpHandler = function() {\r\n                if (handledInKeyDown) return;\r\n\r\n                let value;\r\n                if (data(this, 'isInput')) {\r\n                    const [startPosition, endPosition] = getCursorPosition(this);\r\n                    if (/[a-zA-Z_0-9]/.test(this.value.charAt(endPosition) || ' ')) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = this.value.slice(0, startPosition);\r\n                } else {\r\n                    const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n                    if (\r\n                        !startContainer || !endContainer ||\r\n                        /[a-zA-Z_0-9]/.test(endContainer.nodeValue.charAt(endOffset) || ' ')\r\n                    ) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = startContainer.nodeValue.slice(0, startOffset);\r\n                }\r\n\r\n                handleDropdown: {\r\n                    keyUpIndex++;\r\n                    self.dropdown.empty();\r\n\r\n                    const executeQueue = makeAsyncQueueRunner();\r\n                    let i = 0, timer, triggerMatchFound = false;\r\n                    for (let suggestionList of self.suggestionLists) {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n\r\n                            ((i, asyncReference) => {\r\n                                const match = suggestionList.getMatch(value);\r\n                                const caretPosition = getCaretPosition(this, suggestionList.trigger);\r\n\r\n                                if (self.dropdown.isEmpty) {\r\n                                    timer && clearTimeout(timer);\r\n                                    timer = setTimeout(() => {\r\n                                        self.dropdown.showLoader(caretPosition);\r\n                                    }, 0);\r\n                                }\r\n\r\n                                suggestionList.getSuggestions(match, results => {\r\n                                    if (asyncReference !== keyUpIndex) return;\r\n\r\n                                    executeQueue(() => {\r\n                                        timer && clearTimeout(timer);\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                activeSuggestionList = suggestionList;\r\n                                                self.dropdown.fill(\r\n                                                    results.slice(0, self.maxSuggestions),\r\n                                                    suggestion => {\r\n                                                        setValue({\r\n                                                            element: this,\r\n                                                            trigger: suggestionList.trigger,\r\n                                                            suggestion: suggestion,\r\n                                                            onChange: self.onChange\r\n                                                        });\r\n                                                    }\r\n                                                );\r\n\r\n                                                self.dropdown.show(caretPosition);\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++, keyUpIndex);\r\n                        }\r\n                    }\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.isContentEditable) {\r\n                data(input, 'isInput', false)\r\n            } else if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text')) {\r\n                data(input, 'isInput', true)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('click', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('click', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","value","TypeError","cloneStyle","element1","element2","allStyles","window","getComputedStyle","style","hasOwnProperty","setProperty","element","getPropertyValue","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","getScrollLeftForInput","input","createTextRange","range","inputStyle","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","getCursorPosition","selectionStart","selectionEnd","sort","a","b","getSelectedTextNodes","getSelection","getRangeAt","startContainer","startOffset","nodeType","TEXT_NODE","childNodes","firstChild","endContainer","endOffset","lastChild","nodeValue","length","makeAsyncQueueRunner","i","queue","f","j","shift","data","dataset","JSON","stringify","parse","createNode","div","document","createElement","innerHTML","html","trim","validateSuggestions","suggestions","map","suggestion","e1","e2","on","show","use","focus","constructor","Array","SuggestionList","options","values","e","caseSensitive","Boolean","getSuggestions","keyword","callback","matcher","RegExp","filter","matchFound","test","trigger","escapedTrigger","split","join","regex","prototype","getMatch","match","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","className","dropdown","position","hide","appendChild","body","offsetWidth","classList","remove","add","display","onSet","empty","dropdownLink","append","addEventListener","getActive","preventDefault","stopPropagation","setActive","activeLinks","slice","call","querySelectorAll","pop","firstElementChild","activeLink","nextLink","nextElementSibling","prevLink","previousElementSibling","lastElementChild","splitValue","originalValue","cursorPosition","textAfterTrigger","textUptoTrigger","POSITIONER_CHARACTER","getCaretPosition","clone","id","positioner","createTextNode","replace","elementPosition","opacity","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","Math","min","maxWidth","scrollTop","caretPosition","charHeight","removeChild","containerTextNode","parentNode","referenceNode","nextSibling","insertBefore","remainingTextNode","selection","setStart","setEnd","getNextNode","nextNode","setValue","onChange","insertText","startPosition","endPosition","currentValue","cursorStartPosition","setSelectionRange","AutoSuggest","inputs","Function","maxSuggestions","suggestionLists","suggestionList","Object","self","activeSuggestionList","handledInKeyDown","onBlurHandler","onKeyDownHandler","preventDefaultAction","keyCode","getValue","selectNext","selectPrev","keyUpIndex","onKeyUpHandler","charAt","executeQueue","timer","triggerMatchFound","asyncReference","clearTimeout","setTimeout","showLoader","results","fill","addInputs","args","apply","d","isContentEditable","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}