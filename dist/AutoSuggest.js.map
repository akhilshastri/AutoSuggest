{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\r\n    [].concat(keys).forEach(key => {\r\n        if (typeof object[key] === 'undefined') {\r\n            throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n        }\r\n    });\r\n};\r\nexport const ensureType = (context, object, key, type) => {\r\n    [].concat(object[key]).forEach(value => {\r\n        if (typeof value !== type) {\r\n            throw new TypeError(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n        }\r\n    });\r\n};\r\n\r\nexport const cloneStyle = (element1, element2) => {\r\n    const allStyles = window.getComputedStyle(element1);\r\n    for (let style in allStyles) {\r\n        if (allStyles.hasOwnProperty(style)) {\r\n            element2.style.setProperty(style, allStyles[style]);\r\n        }\r\n    }\r\n};\r\nexport const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return {left, top};\r\n};\r\n\r\nexport const getScrollLeftForInput = element => {\r\n    if(element.createTextRange) {\r\n        const range = element.createTextRange();\r\n        const inputStyle = window.getComputedStyle(element);\r\n        const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n        const rangeRect = range.getBoundingClientRect();\r\n        return element.getBoundingClientRect().left + element.clientLeft + paddingLeft - rangeRect.left;\r\n    } else {\r\n        return element.scrollLeft;\r\n    }\r\n};\r\nexport const getCursorPosition = input => {\r\n    let position = 0;\r\n\r\n    if (typeof input.selectionDirection !== 'undefined') {\r\n        position = input.selectionDirection === 'backward' ? input.selectionStart : input.selectionEnd;\r\n    } else if (document.selection) {\r\n        input.focus();\r\n        const selection = document.selection.createRange();\r\n        selection.moveStart('character', - input.value.length);\r\n        position = selection.text.length;\r\n    }\r\n\r\n    return position;\r\n};\r\n\r\nexport const makeAsyncQueueRunner = () => {\r\n    let i = 0;\r\n    const queue = [];\r\n\r\n    return (f, j) => {\r\n        queue[j - i] = f;\r\n        while (queue[0]) ++i, queue.shift()();\r\n    };\r\n};\r\n\r\nexport const data = (element, key, value) => {\r\n    key = 'autosuggest_' + key;\r\n    if (typeof value !== 'undefined') {\r\n        element.dataset[key] = JSON.stringify(value);\r\n    } else {\r\n        value = element.dataset[key];\r\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n    }\r\n};\r\n\r\nexport const createNode = html => {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild; \r\n}\r\n","import { ensure, ensureType } from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                on: [suggestion],\r\n                show: suggestion,\r\n                use: suggestion,\r\n                focus: [0, 0]\r\n            };\r\n        } else if (type === 'object') {\r\n            try {\r\n                ensure('Suggestion', suggestion, 'value');\r\n                ensureType('Suggestion', suggestion, 'value', 'string');\r\n            } catch (e1) {\r\n                if (e1 instanceof TypeError)  throw e1;\r\n\r\n                try {\r\n                    ensure('Suggestion', suggestion, ['on', 'show', 'use']);\r\n                } catch(e2) {\r\n                    if (suggestion.on || suggestion.show || suggestion.use) {\r\n                        throw e2;\r\n                    } else {\r\n                        throw e1;\r\n                    }\r\n                }\r\n\r\n                ensureType('Suggestion', suggestion, 'on', 'string');\r\n                ensureType('Suggestion', suggestion, 'use', 'string');\r\n                ensureType('Suggestion', suggestion, 'show', 'string');\r\n            }\r\n\r\n            suggestion.show = suggestion.show || suggestion.value;\r\n            suggestion.use = suggestion.use || suggestion.value;\r\n            suggestion.on = [suggestion.show].concat(suggestion.on || suggestion.value);\r\n\r\n            suggestion.focus = suggestion.focus || [0, 0];\r\n            if (suggestion.focus.constructor !== Array) {\r\n                suggestion.focus = [suggestion.focus, suggestion.focus];\r\n            }\r\n        }\r\n\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = {\r\n            values: options\r\n        };\r\n    }\r\n\r\n    try {\r\n        ensure('SuggestionList', options, 'trigger');\r\n        ensureType('Suggestion', options, 'trigger', 'string');\r\n    } catch (e) {\r\n        if (e instanceof TypeError) throw e;\r\n    }\r\n\r\n    ensure('SuggestionList', options, 'values');\r\n    options.caseSensitive = Boolean(options.caseSensitive);\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = (keyword, callback) => {\r\n            options.values(keyword, values => callback(validateSuggestions(values)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const matcher = new RegExp('^' + keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.values.filter(value => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < value.on.length; i++) {\r\n                        if (matchFound = matcher.test(value.on[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    this.trigger = options.trigger;\r\n    if (this.trigger) {\r\n        const escapedTrigger = `\\\\${this.trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+?)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n}\r\n\r\nSuggestionList.prototype.getMatch = function (value) {\r\n    return value.match(this.regex)[1];\r\n};\r\n\r\nexport default SuggestionList;\r\n","import { data, createNode } from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n        }\r\n\r\n        const activeElement = this.getActive();\r\n        activeElement && activeElement.classList.remove('active');\r\n        this.dropdownContent.firstElementChild.classList.add('active');\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLink = createNode(`<li><a>${suggestion.show}</a></li>`);\r\n            this.dropdownContent.append(dropdownLink);\r\n            data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (!this.isActive) {\r\n            this.show();\r\n        }\r\n\r\n        this.width = this.dropdownContent.offsetWidth;\r\n\r\n        if (!this.isActive) {\r\n            this.hide();\r\n        }\r\n\r\n        this.isEmpty = false;\r\n    }\r\n\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    selectNext() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        nextLink.classList.add('active');\r\n    }\r\n\r\n    selectPrev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.previousElementSibling || this.dropdownContent.lastElementChild;\r\n\r\n        activeLink.classList.remove('active');\r\n        prevLink.classList.add('active');\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import {\r\n    data, cloneStyle,\r\n    getGlobalOffset,\r\n    getCursorPosition,\r\n    getScrollLeftForInput,\r\n    makeAsyncQueueRunner\r\n} from './Utilities';\r\n\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction getContainerTextNode(range) {\r\n    let cursorPosition = range.startOffset;\r\n    let containerTextNode = range.startContainer;\r\n\r\n    if (containerTextNode.nodeType !== containerTextNode.TEXT_NODE) {\r\n        cursorPosition = 0;\r\n        containerTextNode = containerTextNode.childNodes[range.startOffset];\r\n        while (containerTextNode && containerTextNode.nodeType !== containerTextNode.TEXT_NODE) {\r\n            containerTextNode = containerTextNode.firstChild;\r\n        }\r\n    }\r\n\r\n    return { cursorPosition, containerTextNode };\r\n}\r\n\r\nfunction getCaretPosition(element, cursorPosition) {\r\n    if (data(element, 'isInput')) {\r\n        const originalValue = element.value;\r\n        const value = originalValue.slice(0, cursorPosition);\r\n\r\n        const clone = document.createElement('pre');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        //Create a clone of our input field using div and copy value into div\r\n        //Wrap last character in a span to get its position\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(value.slice(-1)));\r\n\r\n        clone.appendChild(document.createTextNode(value.slice(0, -1)));\r\n        clone.appendChild(positioner);\r\n        clone.appendChild(document.createTextNode(originalValue.slice(cursorPosition)));\r\n        cloneStyle(element, clone);\r\n\r\n        //Get position of element and overlap our clone on the element\r\n        const elementPosition = getGlobalOffset(element);\r\n\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n\r\n        //append clone and scroll\r\n        document.body.appendChild(clone);\r\n\r\n        //Extra styles for the clone depending on type of input\r\n        if (element.tagName === 'INPUT') {\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === originalValue.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n        } else {\r\n            clone.style.maxWidth = '100%';\r\n            clone.style.whiteSpace = 'pre-wrap';\r\n            clone.scrollTop = element.scrollTop;\r\n            clone.scrollLeft = element.scrollLeft;\r\n        }\r\n\r\n        //Get position of span\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        caretPosition.left += 10 - clone.scrollLeft;\r\n        caretPosition.top += 28 - clone.scrollTop;\r\n        document.body.removeChild(clone);\r\n\r\n        return caretPosition;\r\n    } else {\r\n        //Invisible character\r\n        const markerTextChar = \"\\ufeff\";\r\n        //Get the content after last trigger for showing matched results in dropdown\r\n        const selection = window.getSelection().getRangeAt(0);\r\n\r\n        const { cursorPosition, containerTextNode } = getContainerTextNode(selection);\r\n        if (!containerTextNode) {\r\n            return null;\r\n        }\r\n\r\n        const parentNode = containerTextNode.parentNode;\r\n        const referenceNode = containerTextNode.nextSibling;\r\n        const remainingText = containerTextNode.nodeValue.slice(cursorPosition);\r\n        containerTextNode.nodeValue = containerTextNode.nodeValue.slice(0, cursorPosition);\r\n\r\n        // Create the marker element containing invisible character using DOM methods and insert it\r\n        const markerElement = document.createElement(\"span\");\r\n        markerElement.appendChild(document.createTextNode(markerTextChar));\r\n        parentNode.insertBefore(markerElement, referenceNode);\r\n\r\n        if (remainingText) {\r\n            const remainingTextNode = document.createTextNode(remainingText);\r\n            parentNode.insertBefore(remainingTextNode, referenceNode);\r\n        }\r\n\r\n        // Find markerEl position\r\n        const caretPosition = getGlobalOffset(markerElement);\r\n        caretPosition.left += 10;\r\n        caretPosition.top += 28;\r\n\r\n        parentNode.removeChild(markerElement);\r\n        parentNode.normalize();\r\n\r\n        selection.setStart(containerTextNode, cursorPosition);\r\n        selection.collapse(true);\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst setValue = ({ element, trigger, cursorPosition, suggestion }) => {\r\n    const insertText = suggestion.use;\r\n\r\n    if (data(element, 'isInput')) {\r\n        const originalValue = element.value;\r\n        let value = originalValue.slice(0, cursorPosition);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n\r\n        value = value.slice(0, 0 - currentValue.length - (trigger || '').length);\r\n        element.value = value + insertText + originalValue.slice(cursorPosition);\r\n        element.focus();\r\n\r\n        const cursorStartPosition = value.length;\r\n        const newCursorPositions = suggestion.focus;\r\n        const newPosition = cursorStartPosition + insertText.length;\r\n        const newPosition1 = newPosition + newCursorPositions[0];\r\n        const newPosition2 = newPosition + newCursorPositions[1];\r\n\r\n        element.setSelectionRange(newPosition1, newPosition2);\r\n    } else {\r\n        const selection = window.getSelection().getRangeAt(0);\r\n        const { cursorPosition, containerTextNode } = getContainerTextNode(selection);\r\n        if (!containerTextNode) {\r\n            return null;\r\n        }\r\n\r\n        const parentNode = containerTextNode.parentNode;\r\n        const originalValue = containerTextNode.nodeValue;\r\n        let value = originalValue.slice(0, cursorPosition);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n\r\n        value = value.slice(0, 0 - currentValue.length - (trigger || '').length);\r\n        containerTextNode.nodeValue = value + insertText + originalValue.slice(cursorPosition);\r\n\r\n        const cursorStartPosition = value.length;\r\n        const newCursorPositions = suggestion.focus;\r\n        const newPosition = cursorStartPosition + insertText.length;\r\n        const newPosition1 = newPosition + newCursorPositions[0];\r\n        const newPosition2 = newPosition + newCursorPositions[1];\r\n\r\n        selection.setStart(containerTextNode, newPosition1);\r\n        selection.setEnd(containerTextNode, newPosition2);\r\n    }\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (suggestionList.constructor !== Object) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (!suggestionList.hasOwnProperty('caseSensitive') && options.hasOwnProperty('caseSensitive')) {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeSuggestionList = null;\r\n            let activeElementCursorPosition = 0;\r\n            let handledInKeyDown = false;\r\n\r\n            this.onBlurHandler = function() {\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                handledInKeyDown = false;\r\n                if (self.dropdown.isActive) {\r\n                    const preventDefaultAction = () => {\r\n                        e.preventDefault();\r\n                        handledInKeyDown = true;\r\n                    };\r\n\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            cursorPosition: activeElementCursorPosition,\r\n                            suggestion: self.dropdown.getValue()\r\n                        });\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 40) {\r\n                        self.dropdown.selectNext();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 38) {\r\n                        self.dropdown.selectPrev();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 27) {\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    }\r\n                }\r\n            };\r\n\r\n            this.onKeyUpHandler = function(e) {\r\n                const selection = window.getSelection();\r\n                if (handledInKeyDown || !selection.isCollapsed) return;\r\n\r\n                let value;\r\n                if (data(this, 'isInput')) {\r\n                    const cursorPosition = getCursorPosition(this);\r\n                    value = this.value.slice(0, cursorPosition);\r\n                    activeElementCursorPosition = cursorPosition;\r\n                } else {\r\n                    const range = selection.getRangeAt(0);\r\n                    const { cursorPosition, containerTextNode } = getContainerTextNode(range);\r\n                    if (!containerTextNode) return;\r\n                    value = containerTextNode.nodeValue.slice(0, cursorPosition);\r\n                    activeElementCursorPosition = cursorPosition;\r\n                }\r\n\r\n                const caretPosition = getCaretPosition(this, activeElementCursorPosition);\r\n                if (!caretPosition) return;\r\n\r\n                handleDropdown: {\r\n                    let i = 0, triggerMatchFound = false;\r\n                    const execute = makeAsyncQueueRunner();\r\n\r\n                    self.dropdown.empty();\r\n                    for (let suggestionList of self.suggestionLists) {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n\r\n                            (i => {\r\n                                const match = suggestionList.getMatch(value);\r\n                                suggestionList.getSuggestions(match, results => {\r\n                                    execute(() => {\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                activeSuggestionList = suggestionList;\r\n\r\n                                                self.dropdown.fill(results, suggestion => {\r\n                                                    setValue({\r\n                                                        element: this,\r\n                                                        trigger: suggestionList.trigger,\r\n                                                        cursorPosition: activeElementCursorPosition,\r\n                                                        suggestion: suggestion,\r\n                                                    });\r\n                                                });\r\n\r\n                                                self.dropdown.show(caretPosition);\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++);\r\n                        }\r\n                    }\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.isContentEditable) {\r\n                data(input, 'isInput', false)\r\n            } else if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text')) {\r\n                data(input, 'isInput', true)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","value","TypeError","cloneStyle","element1","element2","allStyles","window","getComputedStyle","style","hasOwnProperty","setProperty","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","getScrollLeftForInput","element","createTextRange","range","inputStyle","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","getCursorPosition","position","input","selectionDirection","selectionStart","selectionEnd","document","selection","focus","createRange","moveStart","length","text","makeAsyncQueueRunner","i","queue","f","j","shift","data","dataset","JSON","stringify","parse","createNode","div","createElement","innerHTML","html","trim","firstChild","validateSuggestions","suggestions","map","suggestion","e1","e2","on","show","use","constructor","Array","SuggestionList","options","values","e","caseSensitive","Boolean","getSuggestions","keyword","callback","matcher","RegExp","filter","matchFound","test","trigger","escapedTrigger","split","join","regex","prototype","getMatch","match","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","className","dropdown","hide","appendChild","body","offsetWidth","classList","remove","add","activeElement","getActive","firstElementChild","display","onSet","dropdownLink","append","addEventListener","preventDefault","stopPropagation","activeLinks","slice","call","querySelectorAll","pop","activeLink","nextLink","nextElementSibling","prevLink","previousElementSibling","lastElementChild","getContainerTextNode","cursorPosition","startOffset","containerTextNode","startContainer","nodeType","TEXT_NODE","childNodes","getCaretPosition","originalValue","clone","id","positioner","createTextNode","elementPosition","opacity","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","Math","min","maxWidth","scrollTop","caretPosition","removeChild","markerTextChar","getSelection","getRangeAt","parentNode","referenceNode","nextSibling","remainingText","nodeValue","markerElement","insertBefore","remainingTextNode","normalize","setStart","collapse","setValue","insertText","currentValue","cursorStartPosition","newCursorPositions","newPosition","newPosition1","newPosition2","setSelectionRange","setEnd","AutoSuggest","inputs","suggestionLists","suggestionList","Object","self","activeSuggestionList","activeElementCursorPosition","handledInKeyDown","onBlurHandler","onKeyDownHandler","preventDefaultAction","keyCode","getValue","selectNext","selectPrev","onKeyUpHandler","isCollapsed","triggerMatchFound","execute","empty","results","fill","addInputs","args","apply","d","isContentEditable","push","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}