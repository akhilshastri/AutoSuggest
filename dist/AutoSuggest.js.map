{"version":3,"file":"AutoSuggest.js","sources":["../src/Utilities.js","../src/SuggestionList.js","../src/SuggestionDropdown.js","../src/AutoSuggest.js"],"sourcesContent":["export const ensure = (context, object, keys) => {\r\n    [].concat(keys).forEach(key => {\r\n        if (typeof object[key] === 'undefined') {\r\n            throw new Error(`AutoSuggest: Missing required parameter, ${context}.${key}`);\r\n        }\r\n    });\r\n};\r\nexport const ensureType = (context, object, key, type) => {\r\n    [].concat(object[key]).forEach(value => {\r\n        if (typeof value !== type) {\r\n            throw new TypeError(`AutoSuggest: Invalid Type for ${context}.${key}, expected ${type}`);\r\n        }\r\n    });\r\n};\r\n\r\nexport const cloneStyle = (element1, element2) => {\r\n    const allStyles = window.getComputedStyle(element1);\r\n    for (let style in allStyles) {\r\n        if (allStyles.hasOwnProperty(style)) {\r\n            element2.style.setProperty(style, allStyles[style]);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getComputedStyle = (element, style) =>\r\n    window.getComputedStyle(element).getPropertyValue(style);\r\n\r\nexport const getGlobalOffset = $0 => {\r\n    let node = $0, top = 0, left = 0;\r\n\r\n    do {\r\n        left += node.offsetLeft;\r\n        top += node.offsetTop;\r\n    } while (node = node.offsetParent);\r\n\r\n    return {left, top};\r\n};\r\n\r\nexport const getScrollLeftForInput = input => {\r\n    if (input.createTextRange) {\r\n        const range = input.createTextRange();\r\n        const inputStyle = window.getComputedStyle(input);\r\n        const paddingLeft = parseFloat(inputStyle.paddingLeft);\r\n        const rangeRect = range.getBoundingClientRect();\r\n        return input.getBoundingClientRect().left + input.clientLeft + paddingLeft - rangeRect.left;\r\n    } else {\r\n        return input.scrollLeft;\r\n    }\r\n};\r\n\r\nexport const getCursorPosition = input => {\r\n    return [input.selectionStart, input.selectionEnd].sort((a, b) => a - b);\r\n};\r\n\r\nexport const getSelectedTextNodes = () => {\r\n    const range = window.getSelection().getRangeAt(0);\r\n\r\n    let { startContainer, startOffset } = range;\r\n    if (startContainer.nodeType !== startContainer.TEXT_NODE) {\r\n        startContainer = startContainer.childNodes[startOffset];\r\n        while (startContainer && startContainer.nodeType !== startContainer.TEXT_NODE) {\r\n            startContainer = startContainer.firstChild;\r\n        }\r\n        startOffset = 0;\r\n    }\r\n\r\n    let { endContainer, endOffset } = range;\r\n    if (endContainer.nodeType !== endContainer.TEXT_NODE) {\r\n        endContainer = endContainer.childNodes[endOffset];\r\n        while (endContainer && endContainer.nodeType !== endContainer.TEXT_NODE) {\r\n            endContainer = endContainer.lastChild;\r\n        }\r\n        endOffset = endContainer ? endContainer.nodeValue.length : endContainer;\r\n    }\r\n\r\n    return { startContainer, startOffset, endContainer, endOffset };\r\n};\r\n\r\nexport const makeAsyncQueueRunner = () => {\r\n    let i = 0;\r\n    let queue = [];\r\n\r\n    return (f, j) => {\r\n        queue[j - i] = f;\r\n        while (queue[0]) ++i, queue.shift()();\r\n    };\r\n};\r\n\r\nexport const data = (element, key, value) => {\r\n    key = 'autosuggest_' + key;\r\n    if (typeof value !== 'undefined') {\r\n        element.dataset[key] = JSON.stringify(value);\r\n    } else {\r\n        value = element.dataset[key];\r\n        return typeof value !== 'undefined' ? JSON.parse(element.dataset[key]) : value;\r\n    }\r\n};\r\n\r\nexport const createNode = html => {\r\n    var div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild; \r\n};\r\n","import { ensure, ensureType } from './Utilities';\r\n\r\nfunction validateSuggestions (suggestions) {\r\n    return [].concat(suggestions).map(suggestion => {\r\n        const type = typeof suggestion;\r\n        if (type === 'string') {\r\n            suggestion = {\r\n                on: [suggestion],\r\n                show: suggestion,\r\n                insertText: suggestion,\r\n                focusText: [0, 0]\r\n            };\r\n        } else if (type === 'object') {\r\n            try {\r\n                ensure('Suggestion', suggestion, 'value');\r\n                ensureType('Suggestion', suggestion, 'value', 'string');\r\n            } catch (e1) {\r\n                if (e1 instanceof TypeError)  throw e1;\r\n\r\n                if (!(suggestion.on && suggestion.show && (suggestion.insertText || suggestion.insertHtml))) {\r\n                    try {\r\n                        ensure('Suggestion', suggestion, ['on', 'show', 'insertText']);\r\n                    } catch (e2) {\r\n                        if (suggestion.on || suggestion.show || suggestion.insertText) {\r\n                            throw e2;\r\n                        } else {\r\n                            throw e1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ensureType('Suggestion', suggestion, 'on', 'string');\r\n                ensureType('Suggestion', suggestion, 'show', 'string');\r\n                ensureType('Suggestion', suggestion, 'insertText', 'string');\r\n                ensureType('Suggestion', suggestion, 'insertHtml', 'string');\r\n            }\r\n\r\n            suggestion.show = suggestion.show || suggestion.value;\r\n            suggestion.insertText = suggestion.insertText || suggestion.value;\r\n            suggestion.on = [suggestion.show].concat(suggestion.on || suggestion.value);\r\n\r\n            suggestion.focusText = suggestion.focusText || [0, 0];\r\n            if (suggestion.focusText.constructor !== Array) {\r\n                suggestion.focusText = [suggestion.focusText, suggestion.focusText];\r\n            }\r\n\r\n            if (suggestion.insertHtml) {\r\n                suggestion.focusHtml = suggestion.focusHtml || [0, 0];\r\n                if (suggestion.focusHtml.constructor !== Array) {\r\n                    suggestion.focusHtml = [suggestion.focusHtml, suggestion.focusHtml];\r\n                }\r\n            }\r\n        }\r\n\r\n        return suggestion;\r\n    });\r\n}\r\n\r\nfunction SuggestionList(options) {\r\n    // validate options\r\n    if (options && !options.values) {\r\n        options = {\r\n            values: options\r\n        };\r\n    }\r\n\r\n    try {\r\n        ensure('SuggestionList', options, 'trigger');\r\n        ensureType('Suggestion', options, 'trigger', 'string');\r\n    } catch (e) {\r\n        if (e instanceof TypeError) throw e;\r\n    }\r\n\r\n    ensure('SuggestionList', options, 'values');\r\n    options.caseSensitive = Boolean(options.caseSensitive);\r\n\r\n    if (typeof options.values === 'function') {\r\n        this.getSuggestions = function (keyword, callback) {\r\n            options.values.call(this, keyword, values => callback(validateSuggestions(values)));\r\n        };\r\n    } else if (options.values.constructor === Array || typeof options.values === 'string') {\r\n        options.values = validateSuggestions(options.values);\r\n        this.getSuggestions = (keyword, callback) => {\r\n            const matcher = new RegExp('^' + keyword, !options.caseSensitive ? 'i' : '');\r\n            callback (\r\n                options.values.filter(value => {\r\n                    let matchFound = false;\r\n                    for (let i = 0; i < value.on.length; i++) {\r\n                        if (value.on[i] !== keyword && (matchFound = matcher.test(value.on[i]))) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return matchFound;\r\n                })\r\n            );\r\n        };\r\n    }\r\n\r\n    this.trigger = options.trigger;\r\n    if (this.trigger) {\r\n        const escapedTrigger = `\\\\${this.trigger.split('').join('\\\\')}`;\r\n        this.regex = new RegExp(`(?:^|[^${escapedTrigger}]+?)${escapedTrigger}(\\\\S*)$`);\r\n    } else {\r\n        this.regex = new RegExp('(?:^|\\\\W+)(\\\\w+)$');\r\n    }\r\n}\r\n\r\nSuggestionList.prototype.getMatch = function (value) {\r\n    return value.match(this.regex)[1];\r\n};\r\n\r\nexport default SuggestionList;\r\n","import { data, createNode } from './Utilities';\r\n\r\nclass SuggestionDropdown {\r\n    constructor() {\r\n        this.width = 0;\r\n        this.isEmpty = true;\r\n        this.isActive = false;\r\n\r\n        this.dropdownContent = document.createElement('ul');\r\n        this.dropdownContent.className = 'dropdown-menu dropdown-menu-left';\r\n\r\n        this.dropdown = document.createElement('div');\r\n        this.dropdown.className = 'dropdown open';\r\n        this.dropdown.style.position = 'absolute';\r\n\r\n        this.hide();\r\n        this.dropdown.appendChild(this.dropdownContent);\r\n        document.body.appendChild(this.dropdown);\r\n    }\r\n\r\n    show(position) {\r\n        if (position) {\r\n            this.dropdown.style.left = `${position.left}px`;\r\n            this.dropdown.style.top = `${position.top}px`;\r\n\r\n            if ((position.left + this.width) > document.body.offsetWidth) {\r\n                this.dropdownContent.classList.remove('dropdown-menu-left');\r\n                this.dropdownContent.classList.add('dropdown-menu-right');\r\n            } else {\r\n                this.dropdownContent.classList.remove('dropdown-menu-right');\r\n                this.dropdownContent.classList.add('dropdown-menu-left');\r\n            }\r\n        }\r\n\r\n        this.dropdown.style.display = 'block';\r\n        this.isActive = true;\r\n    }\r\n\r\n    hide() {\r\n        this.dropdown.style.display = 'none';\r\n        this.isActive = false;\r\n    }\r\n\r\n    empty() {\r\n        this.dropdownContent.innerHTML = '';\r\n        this.isEmpty = true;\r\n    }\r\n\r\n    fill(suggestions, onSet) {\r\n        this.empty();\r\n        suggestions.forEach(suggestion => {\r\n            const dropdownLink = createNode(`<li><a>${suggestion.show}</a></li>`);\r\n            this.dropdownContent.append(dropdownLink);\r\n            data(dropdownLink, 'suggestion', suggestion);\r\n\r\n            dropdownLink.addEventListener('mouseenter', () => {\r\n                this.getActive().classList.remove('active');\r\n                dropdownLink.classList.add('active');\r\n            });\r\n\r\n            dropdownLink.addEventListener('mousedown', (e) => {\r\n                onSet(suggestion);\r\n                this.hide();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        });\r\n\r\n        // Calculate width\r\n        if (!this.isActive) {\r\n            this.show();\r\n        }\r\n\r\n        this.width = this.dropdownContent.offsetWidth;\r\n\r\n        if (!this.isActive) {\r\n            this.hide();\r\n        }\r\n\r\n        this.setActive();\r\n        this.isEmpty = false;\r\n    }\r\n\r\n    showLoader(position) {\r\n        this.empty();\r\n        this.dropdownContent.innerHTML = '<div class=\"autosuggest-loader\">Loading...</div>';\r\n        this.show(position);\r\n    }\r\n\r\n    getActive() {\r\n        const activeLinks = Array.prototype.slice.call(this.dropdownContent.querySelectorAll('li.active'), 0);\r\n        while (activeLinks[1]) {\r\n            activeLinks.pop().classList.remove('active');\r\n        }\r\n\r\n        return activeLinks[0];\r\n    }\r\n\r\n    getValue(element) {\r\n        return data((element || this.getActive()), 'suggestion');\r\n    }\r\n\r\n    setActive(element = this.dropdownContent.firstElementChild, activeLink) {\r\n        activeLink && activeLink.classList.remove('active');\r\n        element.classList.add('active');\r\n    }\r\n\r\n    selectNext() {\r\n        const activeLink = this.getActive();\r\n        const nextLink = activeLink.nextElementSibling || this.dropdownContent.firstElementChild;\r\n        this.setActive(nextLink, activeLink);\r\n    }\r\n\r\n    selectPrev() {\r\n        const activeLink = this.getActive();\r\n        const prevLink = activeLink.previousElementSibling || this.dropdownContent.lastElementChild;\r\n        this.setActive(prevLink, activeLink);\r\n    }\r\n}\r\n\r\nexport default SuggestionDropdown;\r\n","import {\r\n    data, cloneStyle,\r\n    getGlobalOffset,\r\n    getCursorPosition,\r\n    getScrollLeftForInput,\r\n    makeAsyncQueueRunner,\r\n    getSelectedTextNodes,\r\n    getComputedStyle\r\n} from './Utilities';\r\n\r\nimport SuggestionList from './SuggestionList';\r\nimport SuggestionDropdown from './SuggestionDropdown';\r\n\r\nfunction splitValue(originalValue, cursorPosition, trigger) {\r\n    const value = originalValue.slice(0, cursorPosition);\r\n    let textAfterTrigger = value.split(trigger || /\\W/).pop();\r\n    const textUptoTrigger = textAfterTrigger.length ? value.slice(0, 0 - textAfterTrigger.length) : value;\r\n    textAfterTrigger += originalValue.slice(cursorPosition);\r\n    return { textAfterTrigger, textUptoTrigger };\r\n}\r\n\r\nfunction getCharHeight(...elements) {\r\n    return Math.max(...elements.map(element => (\r\n        parseFloat(getComputedStyle(element, 'line-height'))\r\n    )));\r\n}\r\n\r\n// Invisible character\r\nconst POSITIONER_CHARACTER = \"\\ufeff\";\r\nfunction getCaretPosition(element, trigger) {\r\n    if (data(element, 'isInput')) {\r\n        const [cursorPosition] = getCursorPosition(element);\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(element.value, cursorPosition, trigger);\r\n\r\n        // pre to retain special characters\r\n        const clone = document.createElement('pre');\r\n        clone.id = 'autosuggest-positionclone';\r\n\r\n        const positioner = document.createElement('span');\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n\r\n        clone.appendChild(document.createTextNode(textUptoTrigger.replace(/ /g, '\\u00A0')));\r\n        clone.appendChild(positioner);\r\n        clone.appendChild(document.createTextNode(textAfterTrigger.replace(/ /g, '\\u00A0')));\r\n        cloneStyle(element, clone);\r\n\r\n        const elementPosition = getGlobalOffset(element);\r\n        clone.style.opacity = 0;\r\n        clone.style.position = 'absolute';\r\n        clone.style.top = `${elementPosition.top}px`;\r\n        clone.style.left = `${elementPosition.left}px`;\r\n        document.body.appendChild(clone);\r\n\r\n        // Extra styles for the clone depending on type of input\r\n        let charHeight;\r\n        if (element.tagName === 'INPUT') {\r\n            clone.style.overflowX = 'auto';\r\n            clone.style.whiteSpace = 'nowrap';\r\n            if (cursorPosition === element.value.length) {\r\n                clone.scrollLeft = clone.scrollWidth - clone.clientWidth;\r\n            } else {\r\n                clone.scrollLeft = Math.min(getScrollLeftForInput(element), clone.scrollWidth - clone.clientWidth);\r\n            }\r\n            charHeight = clone.offsetHeight - parseFloat(getComputedStyle(clone, 'padding-top')) - parseFloat(getComputedStyle(clone, 'padding-bottom'));\r\n        } else {\r\n            clone.style.maxWidth = '100%';\r\n            clone.style.whiteSpace = 'pre-wrap';\r\n            clone.scrollTop = element.scrollTop;\r\n            clone.scrollLeft = element.scrollLeft;\r\n            charHeight = getCharHeight(clone, positioner);\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        caretPosition.left -= clone.scrollLeft;\r\n        caretPosition.top += charHeight - clone.scrollTop;\r\n\r\n        document.body.removeChild(clone);\r\n        return caretPosition;\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = window.getSelection().getRangeAt(0);\r\n        const { startContainer: containerTextNode, startOffset: cursorPosition } = getSelectedTextNodes();\r\n        const { textAfterTrigger, textUptoTrigger } = splitValue(containerTextNode.nodeValue, cursorPosition, trigger);\r\n\r\n        const parentNode = containerTextNode.parentNode;\r\n        const referenceNode = containerTextNode.nextSibling;\r\n\r\n        const positioner = document.createElement(\"span\");\r\n        positioner.appendChild(document.createTextNode(POSITIONER_CHARACTER));\r\n        parentNode.insertBefore(positioner, referenceNode);\r\n\r\n        if (textAfterTrigger) {\r\n            containerTextNode.nodeValue = textUptoTrigger;\r\n            const remainingTextNode = document.createTextNode(textAfterTrigger);\r\n            parentNode.insertBefore(remainingTextNode, referenceNode);\r\n        }\r\n\r\n        const caretPosition = getGlobalOffset(positioner);\r\n        const charHeight = getCharHeight(positioner);\r\n        caretPosition.top += charHeight;\r\n\r\n        // Reset DOM to the state before changes\r\n        parentNode.removeChild(positioner);\r\n        if (textAfterTrigger) {\r\n            parentNode.removeChild(containerTextNode.nextSibling);\r\n            containerTextNode.nodeValue = textUptoTrigger + textAfterTrigger;\r\n        }\r\n\r\n        const selection = window.getSelection().getRangeAt(0);\r\n        selection.setStart(startContainer, startOffset);\r\n        selection.setEnd(endContainer, endOffset);\r\n\r\n        return caretPosition;\r\n    }\r\n}\r\n\r\nconst getNextNode = node => {\r\n    let nextNode = node.nextSibling || node.parentNode.nextSibling;\r\n    while (nextNode.firstChild) nextNode = nextNode.firstChild;\r\n    return nextNode;\r\n};\r\n\r\nconst removeNodesBetween = (startContainer, endContainer) => {\r\n    if (startContainer === endContainer) return;\r\n    let node = getNextNode(startContainer);\r\n    while (node !== endContainer) {\r\n        node.parentNode.removeChild(node);\r\n        node = getNextNode(startContainer);\r\n    }\r\n};\r\n\r\nconst insertHtmlAfter = (node, html) => {\r\n    const psuedoDom = document.createElement('div');\r\n    psuedoDom.innerHTML = html;\r\n\r\n    const referenceNode = node.nextSibling;\r\n    const appendedNodes = [];\r\n    while (psuedoDom.firstChild) {\r\n        appendedNodes.push(psuedoDom.firstChild);\r\n        node.parentNode.insertBefore(psuedoDom.firstChild, referenceNode);\r\n    }\r\n\r\n    return appendedNodes;\r\n};\r\n\r\nconst setValue = ({ element, trigger, suggestion, onChange }) => {\r\n    if (data(element, 'isInput')) {\r\n        const [startPosition, endPosition] = getCursorPosition(element);\r\n        const originalValue = element.value;\r\n\r\n        let value = originalValue.slice(0, startPosition);\r\n        const currentValue = value.split(trigger || /\\W/).pop();\r\n        value = value.slice(0, 0 - currentValue.length - (trigger || '').length) + (suggestion.insertText || suggestion.insertHtml);\r\n        element.value = value + originalValue.slice(endPosition);\r\n        element.focus();\r\n\r\n        const focus = suggestion.insertText ? suggestion.focusText : [0, 0];\r\n        const cursorStartPosition = value.length;\r\n        element.setSelectionRange(cursorStartPosition + focus[0], cursorStartPosition + focus[1]);\r\n    } else {\r\n        const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n        const selection = window.getSelection().getRangeAt(0);\r\n\r\n        let preValue = startContainer.nodeValue.slice(0, startOffset);\r\n        const replaceValue = preValue.split(trigger || /\\W/).pop();\r\n        preValue = preValue.slice(0, 0 - replaceValue.length - (trigger || '').length);\r\n\r\n        if (startContainer !== endContainer) {\r\n            startContainer.nodeValue = preValue;\r\n            removeNodesBetween(startContainer, endContainer);\r\n            endContainer.nodeValue = endContainer.nodeValue.slice(endOffset);\r\n            endContainer.parentNode.normalize();\r\n        } else {\r\n            startContainer.splitText(endOffset);\r\n            startContainer.nodeValue = preValue;\r\n        }\r\n\r\n        if (suggestion.insertHtml) {\r\n            const nodes = insertHtmlAfter(startContainer, suggestion.insertHtml);\r\n            const focus = nodes.length ? suggestion.focusHtml : [0, 0];\r\n            function setSelection(focus, nodes, method) {\r\n                let lastNode, lastFocus = focus;\r\n                if (lastFocus !== 0) {\r\n                    do {\r\n                        lastNode = nodes.pop();\r\n                        lastFocus += lastNode.textContent.length;\r\n                    } while(nodes.length && lastFocus < 0);\r\n\r\n                    if (!lastNode) {\r\n                        throw new TypeError(`AutoSuggest: Invalid value provided for Suggestion.focusHtml`);\r\n                    };\r\n                }\r\n\r\n                if (lastFocus === 0) {\r\n                    selection[method + 'After'](nodes[nodes.length - 1] || startContainer);\r\n                } else {\r\n                    if (lastNode.nodeType === lastNode.TEXT_NODE) {\r\n                        selection[method](lastNode, lastFocus);\r\n                    } else {\r\n                        setSelection(\r\n                            lastFocus - lastNode.textContent.length,\r\n                            Array.from(lastNode.childNodes),\r\n                            method\r\n                        );\r\n                    }\r\n                }\r\n            };\r\n\r\n            setSelection(focus[1], [...nodes], 'setEnd');\r\n            setSelection(focus[0], [...nodes], 'setStart');\r\n        } else {\r\n            startContainer.nodeValue += suggestion.insertText;\r\n\r\n            const focus = suggestion.focusText;\r\n            const cursorStartPosition = startContainer.nodeValue.length;\r\n            startContainer.parentNode.normalize();\r\n\r\n            selection.setStart(startContainer, cursorStartPosition + focus[0]);\r\n            selection.setEnd(startContainer, cursorStartPosition + focus[1]);\r\n        }\r\n    }\r\n\r\n    onChange(suggestion);\r\n};\r\n\r\nclass AutoSuggest {\r\n    constructor(options, ...inputs) {\r\n        if (!options) {\r\n            throw new Error(`AutoSuggest: Missing required parameter, options`);\r\n        }\r\n\r\n        this.inputs = [];\r\n        this.dropdown = new SuggestionDropdown();\r\n        this.onChange = options.onChange || Function.prototype;\r\n        this.maxSuggestions = options.maxSuggestions || 10;\r\n\r\n        // validate suggestions\r\n        this.suggestionLists = options.suggestions || [];\r\n        for (let i = 0; i < this.suggestionLists.length; i++) {\r\n            let suggestionList = this.suggestionLists[i];\r\n            if (!(suggestionList instanceof SuggestionList)) {\r\n                if (suggestionList.constructor !== Object) {\r\n                    suggestionList = { values: suggestionList };\r\n                }\r\n\r\n                if (!suggestionList.hasOwnProperty('caseSensitive') && options.hasOwnProperty('caseSensitive')) {\r\n                    suggestionList.caseSensitive = options.caseSensitive;\r\n                }\r\n\r\n                this.suggestionLists[i] = new SuggestionList(suggestionList);\r\n            }\r\n        }\r\n\r\n        events: {\r\n            const self = this;\r\n            let activeSuggestionList = null;\r\n            let handledInKeyDown = false;\r\n\r\n            this.onBlurHandler = function() {\r\n                self.dropdown.hide();\r\n            };\r\n\r\n            this.onKeyDownHandler = function(e) {\r\n                handledInKeyDown = false;\r\n                if (self.dropdown.isActive) {\r\n                    const preventDefaultAction = () => {\r\n                        e.preventDefault();\r\n                        handledInKeyDown = true;\r\n                    };\r\n\r\n                    if (e.keyCode === 13 || e.keyCode === 9) {\r\n                        setValue({\r\n                            element: this,\r\n                            trigger: activeSuggestionList.trigger,\r\n                            suggestion: self.dropdown.getValue(),\r\n                            onChange: self.onChange.bind(this)\r\n                        });\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 40) {\r\n                        self.dropdown.selectNext();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 38) {\r\n                        self.dropdown.selectPrev();\r\n                        return preventDefaultAction();\r\n                    } else if (e.keyCode === 27) {\r\n                        self.dropdown.hide();\r\n                        return preventDefaultAction();\r\n                    }\r\n                }\r\n            };\r\n\r\n            let keyUpIndex = 0;\r\n            this.onKeyUpHandler = function() {\r\n                if (handledInKeyDown) return;\r\n\r\n                let value;\r\n                if (data(this, 'isInput')) {\r\n                    const [startPosition, endPosition] = getCursorPosition(this);\r\n                    if (/[a-zA-Z_0-9]/.test(this.value.charAt(endPosition) || ' ')) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = this.value.slice(0, startPosition);\r\n                } else {\r\n                    const { startContainer, startOffset, endContainer, endOffset } = getSelectedTextNodes();\r\n                    if (\r\n                        !startContainer || !endContainer ||\r\n                        /[a-zA-Z_0-9]/.test(endContainer.nodeValue.charAt(endOffset) || ' ')\r\n                    ) {\r\n                        self.dropdown.hide();\r\n                        return;\r\n                    }\r\n\r\n                    value = startContainer.nodeValue.slice(0, startOffset);\r\n                }\r\n\r\n                handleDropdown: {\r\n                    keyUpIndex++;\r\n                    self.dropdown.empty();\r\n\r\n                    const executeQueue = makeAsyncQueueRunner();\r\n                    let i = 0, timer, triggerMatchFound = false;\r\n                    for (let suggestionList of self.suggestionLists) {\r\n                        if (suggestionList.regex.test(value)) {\r\n                            triggerMatchFound = true;\r\n\r\n                            ((i, asyncReference) => {\r\n                                const match = suggestionList.getMatch(value);\r\n                                const caretPosition = getCaretPosition(this, suggestionList.trigger);\r\n\r\n                                if (self.dropdown.isEmpty) {\r\n                                    timer && clearTimeout(timer);\r\n                                    timer = setTimeout(() => {\r\n                                        self.dropdown.showLoader(caretPosition);\r\n                                    }, 0);\r\n                                }\r\n\r\n                                suggestionList.getSuggestions.call(this, match, results => {\r\n                                    if (asyncReference !== keyUpIndex) return;\r\n\r\n                                    executeQueue(() => {\r\n                                        timer && clearTimeout(timer);\r\n                                        if (self.dropdown.isEmpty) {\r\n                                            if (results.length) {\r\n                                                activeSuggestionList = suggestionList;\r\n                                                self.dropdown.fill(\r\n                                                    results.slice(0, self.maxSuggestions),\r\n                                                    suggestion => {\r\n                                                        setValue({\r\n                                                            element: this,\r\n                                                            trigger: suggestionList.trigger,\r\n                                                            suggestion: suggestion,\r\n                                                            onChange: self.onChange.bind(this)\r\n                                                        });\r\n                                                    }\r\n                                                );\r\n\r\n                                                self.dropdown.show(caretPosition);\r\n                                            } else {\r\n                                                self.dropdown.hide();\r\n                                            }\r\n                                        }\r\n                                    }, i);\r\n                                });\r\n                            })(i++, keyUpIndex);\r\n                        }\r\n                    }\r\n\r\n                    if (!triggerMatchFound) {\r\n                        self.dropdown.hide();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // initialize events on inputs\r\n        this.addInputs(...inputs);\r\n    }\r\n\r\n    addInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            // validate element\r\n            if (input.isContentEditable) {\r\n                data(input, 'isInput', false)\r\n            } else if (input.tagName === 'TEXTAREA' || (input.tagName === 'INPUT' && input.type === 'text')) {\r\n                data(input, 'isInput', true)\r\n            } else {\r\n                throw new Error('AutoSuggest: Invalid input: only input[type = text], textarea and contenteditable elements are supported');\r\n            }\r\n\r\n            // init events\r\n            input.addEventListener('blur', this.onBlurHandler);\r\n            input.addEventListener('keyup', this.onKeyUpHandler);\r\n            input.addEventListener('click', this.onKeyUpHandler);\r\n            input.addEventListener('keydown', this.onKeyDownHandler, true);\r\n\r\n            data(input, 'index', this.inputs.push(input) - 1);\r\n        });\r\n    }\r\n\r\n    removeInputs(...args) {\r\n        const inputs = Array.prototype.concat.apply([], args.map(d => d[0] ? Array.prototype.slice.call(d, 0) : d));\r\n\r\n        inputs.forEach(input => {\r\n            const index = data(input, 'index');\r\n            if (!isNaN(index)) {\r\n                this.inputs.splice(index, 1);\r\n\r\n                // destroy events\r\n                input.removeEventListener('blur', this.onBlurHandler);\r\n                input.removeEventListener('keyup', this.onKeyUpHandler);\r\n                input.removeEventListener('click', this.onKeyUpHandler);\r\n                input.removeEventListener('keydown', this.onKeyDownHandler, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.removeInputs(this.inputs);\r\n    }\r\n}\r\n\r\nexport default AutoSuggest;\r\n"],"names":["ensure","context","object","keys","concat","forEach","key","Error","ensureType","type","value","TypeError","cloneStyle","element1","element2","allStyles","window","getComputedStyle","style","hasOwnProperty","setProperty","element","getPropertyValue","getGlobalOffset","node","$0","top","left","offsetLeft","offsetTop","offsetParent","getScrollLeftForInput","input","createTextRange","range","inputStyle","paddingLeft","parseFloat","rangeRect","getBoundingClientRect","clientLeft","scrollLeft","getCursorPosition","selectionStart","selectionEnd","sort","a","b","getSelectedTextNodes","getSelection","getRangeAt","startContainer","startOffset","nodeType","TEXT_NODE","childNodes","firstChild","endContainer","endOffset","lastChild","nodeValue","length","makeAsyncQueueRunner","i","queue","f","j","shift","data","dataset","JSON","stringify","parse","createNode","div","document","createElement","innerHTML","html","trim","validateSuggestions","suggestions","map","suggestion","e1","on","show","insertText","insertHtml","e2","focusText","constructor","Array","focusHtml","SuggestionList","options","values","e","caseSensitive","Boolean","getSuggestions","keyword","callback","call","matcher","RegExp","filter","matchFound","test","trigger","escapedTrigger","split","join","regex","prototype","getMatch","match","SuggestionDropdown","width","isEmpty","isActive","dropdownContent","className","dropdown","position","hide","appendChild","body","offsetWidth","classList","remove","add","display","onSet","empty","dropdownLink","append","addEventListener","getActive","preventDefault","stopPropagation","setActive","activeLinks","slice","querySelectorAll","pop","firstElementChild","activeLink","nextLink","nextElementSibling","prevLink","previousElementSibling","lastElementChild","splitValue","originalValue","cursorPosition","textAfterTrigger","textUptoTrigger","getCharHeight","elements","Math","max","POSITIONER_CHARACTER","getCaretPosition","clone","id","positioner","createTextNode","replace","elementPosition","opacity","charHeight","tagName","overflowX","whiteSpace","scrollWidth","clientWidth","min","offsetHeight","maxWidth","scrollTop","caretPosition","removeChild","containerTextNode","parentNode","referenceNode","nextSibling","insertBefore","remainingTextNode","selection","setStart","setEnd","getNextNode","nextNode","removeNodesBetween","insertHtmlAfter","psuedoDom","appendedNodes","push","setValue","onChange","startPosition","endPosition","currentValue","focus","cursorStartPosition","setSelectionRange","preValue","replaceValue","normalize","splitText","setSelection","nodes","method","lastNode","lastFocus","textContent","from","AutoSuggest","inputs","Function","maxSuggestions","suggestionLists","suggestionList","Object","self","activeSuggestionList","handledInKeyDown","onBlurHandler","onKeyDownHandler","preventDefaultAction","keyCode","getValue","bind","selectNext","selectPrev","keyUpIndex","onKeyUpHandler","charAt","executeQueue","timer","triggerMatchFound","asyncReference","clearTimeout","setTimeout","showLoader","results","fill","addInputs","args","apply","d","isContentEditable","index","isNaN","splice","removeEventListener","removeInputs"],"mappings":"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"}